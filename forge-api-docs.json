{
    "openapi": "3.1.0",
    "info": {
        "title": "Forge",
        "version": "0.0.1",
        "description": "Laravel Forge - API Documentation"
    },
    "servers": [
        {
            "url": "https:\/\/forge.laravel.com\/api"
        }
    ],
    "tags": [
        {
            "name": "Roles"
        },
        {
            "name": "Sites"
        },
        {
            "name": "Organizations"
        },
        {
            "name": "Recipes"
        },
        {
            "name": "Servers"
        },
        {
            "name": "Background Processes"
        },
        {
            "name": "Nginx"
        },
        {
            "name": "Databases"
        },
        {
            "name": "Monitors"
        },
        {
            "name": "Firewall Rules"
        },
        {
            "name": "Logs"
        },
        {
            "name": "SSH Keys"
        },
        {
            "name": "Scheduled Jobs"
        },
        {
            "name": "Security Rules"
        },
        {
            "name": "Redirect Rules"
        },
        {
            "name": "Integrations"
        },
        {
            "name": "Deployments"
        },
        {
            "name": "Commands"
        },
        {
            "name": "Teams"
        },
        {
            "name": "Server Credentials"
        },
        {
            "name": "User"
        },
        {
            "name": "Providers"
        }
    ],
    "security": [
        {
            "http": []
        },
        {
            "oauth2": []
        }
    ],
    "paths": {
        "\/orgs\/{organization}\/servers\/{server}\/background-processes": {
            "get": {
                "operationId": "organizations.servers.background-processes.index",
                "description": "List all background processes on the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List background processes",
                "tags": [
                    "Background Processes"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `user`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-user`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[user]",
                        "in": "query",
                        "description": "The user that the process is running as.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "forge"
                            ]
                        }
                    },
                    {
                        "name": "filter[site_id]",
                        "in": "query",
                        "description": "The site ID that the process is running for.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                1
                            ]
                        }
                    },
                    {
                        "name": "filter[directory]",
                        "in": "query",
                        "description": "The directory that the process is running in.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "\/home\/forge\/forge.laravel.com"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `BackgroundProcessResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/BackgroundProcessResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.background-processes.store",
                "description": "Create a new background process from a template.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create background process",
                "tags": [
                    "Background Processes"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateBackgroundProcessRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "`BackgroundProcessResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/BackgroundProcessResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create-daemons"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:create-daemons"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/background-processes\/{backgroundProcess}": {
            "get": {
                "operationId": "organizations.servers.background-processes.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get background process",
                "tags": [
                    "Background Processes"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "backgroundProcess",
                        "in": "path",
                        "required": true,
                        "description": "The background process ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`BackgroundProcessResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/BackgroundProcessResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.background-processes.update",
                "description": "Update the supervisor configuration for a background process.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update background process",
                "tags": [
                    "Background Processes"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "backgroundProcess",
                        "in": "path",
                        "required": true,
                        "description": "The background process ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateBackgroundProcessRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create-daemons"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:create-daemons"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            },
            "delete": {
                "operationId": "organizations.servers.background-processes.destroy",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete background process",
                "tags": [
                    "Background Processes"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "backgroundProcess",
                        "in": "path",
                        "required": true,
                        "description": "The background process ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:delete-daemons"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:delete-daemons"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/background-processes\/{backgroundProcess}\/log": {
            "get": {
                "operationId": "organizations.servers.background-processes.log.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get background process log",
                "tags": [
                    "Background Processes"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "backgroundProcess",
                        "in": "path",
                        "required": true,
                        "description": "The background process ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`BackgroundProcessLogResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/BackgroundProcessLogResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create-daemons"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:create-daemons"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/commands": {
            "get": {
                "operationId": "organizations.servers.sites.commands.index",
                "description": "List all command runs for the site.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List commands",
                "tags": [
                    "Commands"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `status`, `created_at`, `updated_at`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-status`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[user_id]",
                        "in": "query",
                        "description": "The user ID of the command initiator.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                1
                            ]
                        }
                    },
                    {
                        "name": "filter[status]",
                        "in": "query",
                        "description": "The status of the command.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "finished"
                            ]
                        }
                    },
                    {
                        "name": "filter[command]",
                        "in": "query",
                        "description": "The command it ran.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "git status"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `CommandResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/CommandResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        },
                                        "included": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/UserResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.sites.commands.store",
                "description": "Run a command on the site.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create command",
                "tags": [
                    "Commands"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RunSiteCommandRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The command has been queued for execution."
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-commands"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-commands"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/commands\/{command}": {
            "get": {
                "operationId": "organizations.servers.sites.commands.show",
                "description": "Get a specific command run.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get command",
                "tags": [
                    "Commands"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "command",
                        "in": "path",
                        "required": true,
                        "description": "The command ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`CommandResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CommandResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.servers.sites.commands.destroy",
                "description": "Delete a command history.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Delete command",
                "tags": [
                    "Commands"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "command",
                        "in": "path",
                        "required": true,
                        "description": "The command ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-commands"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-commands"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/database\/schemas": {
            "get": {
                "operationId": "organizations.servers.database.schemas.index",
                "description": "List all database schemas associated with the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List database schemas",
                "tags": [
                    "Databases"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `name`, `created_at`, `updated_at`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-name`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[name]",
                        "in": "query",
                        "description": "The name of the database schema.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "forge"
                            ]
                        }
                    },
                    {
                        "name": "filter[status]",
                        "in": "query",
                        "description": "The status of the database schema.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "installed"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `DatabaseResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DatabaseResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.database.schemas.store",
                "description": "Add a new database schema to the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create database schema",
                "tags": [
                    "Databases"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateDatabaseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "`DatabaseResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DatabaseResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create-databases"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:create-databases"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/database\/schemas\/{database}": {
            "get": {
                "operationId": "organizations.servers.database.schemas.show",
                "description": "Get a specific database schema associated with the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get database schema",
                "tags": [
                    "Databases"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "database",
                        "in": "path",
                        "required": true,
                        "description": "The database ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`DatabaseResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DatabaseResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.servers.database.schemas.destroy",
                "description": "Remove a database schema from the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete database schema",
                "tags": [
                    "Databases"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "database",
                        "in": "path",
                        "required": true,
                        "description": "The database ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:delete-databases"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:delete-databases"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/database\/schemas\/synchronizations": {
            "post": {
                "operationId": "organizations.servers.database.schemas.synchronizations.store",
                "description": "Synchronize all database schemas on the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update database schemas",
                "tags": [
                    "Databases"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create-databases"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:create-databases"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/database\/users": {
            "get": {
                "operationId": "organizations.servers.database.users.index",
                "description": "List all database users associated with the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List database users",
                "tags": [
                    "Databases"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `name`, `created_at`, `updated_at`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-name`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[name]",
                        "in": "query",
                        "description": "The name of the database user.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "forge"
                            ]
                        }
                    },
                    {
                        "name": "filter[status]",
                        "in": "query",
                        "description": "The status of the database user.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "installed"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `DatabaseUserResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DatabaseUserResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.database.users.store",
                "description": "Add a new database user to the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create database user",
                "tags": [
                    "Databases"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateDatabaseUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "`DatabaseUserResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DatabaseUserResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create-databases"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:create-databases"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/database\/users\/{databaseUser}": {
            "get": {
                "operationId": "organizations.servers.database.users.show",
                "description": "Get a specific database user associated with the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get database user",
                "tags": [
                    "Databases"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "databaseUser",
                        "in": "path",
                        "required": true,
                        "description": "The database user ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`DatabaseUserResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DatabaseUserResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.database.users.update",
                "description": "Update a database user on the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update database user",
                "tags": [
                    "Databases"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "databaseUser",
                        "in": "path",
                        "required": true,
                        "description": "The database user ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateDatabaseUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create-databases"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:create-databases"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            },
            "delete": {
                "operationId": "organizations.servers.database.users.destroy",
                "description": "Remove a database user from the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete database user",
                "tags": [
                    "Databases"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "databaseUser",
                        "in": "path",
                        "required": true,
                        "description": "The database user ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:delete-databases"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:delete-databases"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/database\/password": {
            "put": {
                "operationId": "organizations.servers.database.password.update",
                "description": "Update the password for the database on the server.\nIt will only update the password Forge thinks is the password, it will not change the password on the server itself.\nThis should only be used if you have changed the password on the server itself and want to update Forge.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Update the password for the database",
                "tags": [
                    "Databases"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateDatabasePasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-services"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-services"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/webhooks": {
            "get": {
                "operationId": "organizations.servers.sites.webhooks.index",
                "description": "List all webhooks for the site.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List site webhooks",
                "tags": [
                    "Deployments"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `created_at`, `updated_at`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-created_at`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `DeploymentWebhookResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DeploymentWebhookResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-notifications"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.sites.webhooks.store",
                "description": "Create a new webhook for the site.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create site webhook",
                "tags": [
                    "Deployments"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateDeploymentWebhookRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-notifications"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-notifications"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/webhooks\/{deploymentWebhook}": {
            "get": {
                "operationId": "organizations.servers.sites.webhooks.show",
                "description": "Get a specific webhook associated with the site.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get site webhook",
                "tags": [
                    "Deployments"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "deploymentWebhook",
                        "in": "path",
                        "required": true,
                        "description": "The deployment webhook ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`DeploymentWebhookResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DeploymentWebhookResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-notifications"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.servers.sites.webhooks.destroy",
                "description": "Delete a specific webhook from the site.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete site webhook",
                "tags": [
                    "Deployments"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "deploymentWebhook",
                        "in": "path",
                        "required": true,
                        "description": "The deployment webhook ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-notifications"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-notifications"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/deployments": {
            "get": {
                "operationId": "organizations.servers.sites.deployments.index",
                "description": "Show all recent deployments for the site.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List deployments",
                "tags": [
                    "Deployments"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `created_at`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-created_at`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[commit_hash]",
                        "in": "query",
                        "description": "The commit hash of the deployment.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "011118f"
                            ]
                        }
                    },
                    {
                        "name": "filter[commit_message]",
                        "in": "query",
                        "description": "The commit message of the deployment.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "WIP"
                            ]
                        }
                    },
                    {
                        "name": "filter[commit_author]",
                        "in": "query",
                        "description": "The commit author of the deployment.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "Taylor Otwell"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `DeploymentResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DeploymentResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.sites.deployments.store",
                "description": "Trigger a new deployment for the site.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create deployment",
                "tags": [
                    "Deployments"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "`DeploymentResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DeploymentResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-deploys"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-deploys"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/deployments\/status": {
            "get": {
                "operationId": "organizations.servers.sites.deployments.status.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get deployment status",
                "tags": [
                    "Deployments"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`DeploymentStatusResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DeploymentStatusResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.servers.sites.deployments.status.destroy",
                "description": "Reset the deployment state for the site.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update deployment state",
                "tags": [
                    "Deployments"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-deploys"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-deploys"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/deployments\/script": {
            "get": {
                "operationId": "organizations.servers.sites.deployments.script.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get deployment script",
                "tags": [
                    "Deployments"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`DeploymentScriptResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DeploymentScriptResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.sites.deployments.script.update",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Update deployment script",
                "tags": [
                    "Deployments"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateDeploymentScriptRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`DeploymentScriptResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DeploymentScriptResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-deploys"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-deploys"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/deployments\/deploy-hook": {
            "get": {
                "operationId": "organizations.servers.sites.deployments.deploy-hook.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get the deployment trigger URL",
                "tags": [
                    "Deployments"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`DeployHookResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DeployHookResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-deploys"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.sites.deployments.deploy-hook.update",
                "description": "Regenerate the deployment hook token used for triggering deployment on the deployment URL.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Update deployment trigger URL",
                "tags": [
                    "Deployments"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`DeployHookResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DeployHookResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-deploys"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-deploys"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/deployments\/push-to-deploy": {
            "post": {
                "operationId": "organizations.servers.sites.deployments.push-to-deploy.store",
                "description": "Enable push to deploy for the site.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create push to deploy configuration",
                "tags": [
                    "Deployments"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-deploys"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-deploys"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            },
            "delete": {
                "operationId": "organizations.servers.sites.deployments.push-to-deploy.destroy",
                "description": "Disable push to deploy for the site.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete push to deploy configuration",
                "tags": [
                    "Deployments"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-deploys"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-deploys"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/deployments\/{deployment}": {
            "get": {
                "operationId": "organizations.servers.sites.deployments.show",
                "description": "Show a specific deployment.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get deployment",
                "tags": [
                    "Deployments"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "deployment",
                        "in": "path",
                        "required": true,
                        "description": "The deployment ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`DeploymentResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DeploymentResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/deployments\/{deployment}\/log": {
            "get": {
                "operationId": "organizations.servers.sites.deployments.log.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get deployment output",
                "tags": [
                    "Deployments"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "deployment",
                        "in": "path",
                        "required": true,
                        "description": "The deployment ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`DeploymentOutputResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DeploymentOutputResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-deploys"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-deploys"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/firewall-rules": {
            "get": {
                "operationId": "organizations.servers.firewall-rules.index",
                "description": "List all firewall rules associated with the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List server firewall rules",
                "tags": [
                    "Firewall Rules"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `created_at`, `updated_at`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-created_at`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[name]",
                        "in": "query",
                        "description": "The name of the firewall rule.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "Allow MySQL"
                            ]
                        }
                    },
                    {
                        "name": "filter[status]",
                        "in": "query",
                        "description": "The status of the firewall rule.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "installed"
                            ]
                        }
                    },
                    {
                        "name": "filter[ip_address]",
                        "in": "query",
                        "description": "The IP address or subnet for the firewall rule.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "192.168.1.1"
                            ]
                        }
                    },
                    {
                        "name": "filter[type]",
                        "in": "query",
                        "description": "The type of the firewall rule.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "allow"
                            ]
                        }
                    },
                    {
                        "name": "filter[port]",
                        "in": "query",
                        "description": "The port or port range for the firewall rule.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                3306
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `RuleResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/RuleResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-network"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-network"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.firewall-rules.store",
                "description": "Add a new firewall rule to the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create server firewall rule",
                "tags": [
                    "Firewall Rules"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateFirewallRuleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-network"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-network"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/firewall-rules\/{rule}": {
            "get": {
                "operationId": "organizations.servers.firewall-rules.show",
                "description": "Get a specific firewall rule associated with the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get server firewall rule",
                "tags": [
                    "Firewall Rules"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "rule",
                        "in": "path",
                        "required": true,
                        "description": "The rule ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`RuleResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/RuleResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-network"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-network"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.servers.firewall-rules.destroy",
                "description": "Remove a firewall rule from the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete server firewall rule",
                "tags": [
                    "Firewall Rules"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "rule",
                        "in": "path",
                        "required": true,
                        "description": "The rule ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-network"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-network"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/integrations\/horizon": {
            "get": {
                "operationId": "organizations.servers.sites.integrations.horizon.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get Laravel Horizon integration status",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`HorizonIntegrationResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/HorizonIntegrationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.sites.integrations.horizon.store",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create Laravel Horizon integration",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create-daemons"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:create-daemons"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            },
            "delete": {
                "operationId": "organizations.servers.sites.integrations.horizon.destroy",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete Laravel Horizon integration",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:delete-daemons"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:delete-daemons"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/integrations\/octane": {
            "get": {
                "operationId": "organizations.servers.sites.integrations.octane.show",
                "description": "Show whether Laravel Octane integration is enabled.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get Laravel Octane integration status",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`OctaneIntegrationResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/OctaneIntegrationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.sites.integrations.octane.store",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create Laravel Octane integration",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/EnableOctaneRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create-daemons"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:create-daemons"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            },
            "delete": {
                "operationId": "organizations.servers.sites.integrations.octane.destroy",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete Laravel Octane integration",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:delete-daemons"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:delete-daemons"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/integrations\/reverb": {
            "get": {
                "operationId": "organizations.servers.sites.integrations.reverb.show",
                "description": "Show whether Laravel Reverb integration is enabled.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get Laravel Reverb integration status",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ReverbIntegrationResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ReverbIntegrationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.sites.integrations.reverb.store",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create Laravel Reverb integration",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/EnableReverbRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create-daemons"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:create-daemons"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            },
            "delete": {
                "operationId": "organizations.servers.sites.integrations.reverb.destroy",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete Laravel Reverb integration",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:delete-daemons"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:delete-daemons"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/integrations\/inertia": {
            "get": {
                "operationId": "organizations.servers.sites.integrations.inertia.show",
                "description": "Show whether Inertia SSR integration is enabled.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get Inertia integration status",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`InertiaIntegrationResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/InertiaIntegrationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.sites.integrations.inertia.store",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create Inertia integration",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create-daemons"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:create-daemons"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/integrations\/pulse": {
            "get": {
                "operationId": "organizations.servers.sites.integrations.pulse.show",
                "description": "Show whether Laravel Pulse integration is enabled.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get Laravel Pulse integration status",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`PulseIntegrationResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/PulseIntegrationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.sites.integrations.pulse.store",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create Laravel Pulse integration",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create-daemons"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:create-daemons"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            },
            "delete": {
                "operationId": "organizations.servers.sites.integrations.pulse.destroy",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete Laravel Pulse integration",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:delete-daemons"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:delete-daemons"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/integrations\/laravel-maintenance": {
            "get": {
                "operationId": "organizations.servers.sites.integrations.laravel-maintenance.show",
                "description": "Show whether Laravel Maintenance integration is enabled.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get Laravel Maintenance integration status",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`LaravelMaintenanceIntegrationResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/LaravelMaintenanceIntegrationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.sites.integrations.laravel-maintenance.store",
                "description": "Enable maintenance mode for the site.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create Laravel Maintenance integration",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/EnableMaintenanceModeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-commands"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-commands"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            },
            "delete": {
                "operationId": "organizations.servers.sites.integrations.laravel-maintenance.destroy",
                "description": "Disable maintenance mode for the site.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete Laravel Maintenance integration",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-commands"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-commands"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/integrations\/laravel-scheduler": {
            "get": {
                "operationId": "organizations.servers.sites.integrations.laravel-scheduler.show",
                "description": "Show whether Laravel Scheduler integration is enabled.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get Laravel Scheduler integration job",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`LaravelSchedulerIntegrationResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/LaravelSchedulerIntegrationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.sites.integrations.laravel-scheduler.store",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create Laravel Scheduler integration job",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create-schedulers"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:create-schedulers"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            },
            "delete": {
                "operationId": "organizations.servers.sites.integrations.laravel-scheduler.destroy",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete Laravel Scheduler integration job",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:delete-schedulers"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:delete-schedulers"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/logs\/{key}": {
            "get": {
                "operationId": "organizations.servers.logs.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get server log content",
                "tags": [
                    "Logs"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ServerLogResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ServerLogResource"
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "log": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "log"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-logs"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-logs"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.servers.logs.destroy",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete server log content",
                "tags": [
                    "Logs"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-logs"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-logs"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/monitors": {
            "get": {
                "operationId": "organizations.servers.monitors.index",
                "description": "List all monitors associated with the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List server monitors",
                "tags": [
                    "Monitors"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `state`, `status`, `created_at`, `updated_at`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-state`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[status]",
                        "in": "query",
                        "description": "The status of the monitor.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "installed"
                            ]
                        }
                    },
                    {
                        "name": "filter[state]",
                        "in": "query",
                        "description": "The state of the monitor.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "OK"
                            ]
                        }
                    },
                    {
                        "name": "filter[type]",
                        "in": "query",
                        "description": "The type of the monitor.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "cpu_load"
                            ]
                        }
                    },
                    {
                        "name": "filter[notify]",
                        "in": "query",
                        "description": "The email address to notify when the monitor is in an alert state.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "taylor@laravel.com"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `MonitorResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/MonitorResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.monitors.store",
                "description": "Add a new monitor to the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create server monitor",
                "tags": [
                    "Monitors"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateMonitorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "`MonitorResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/MonitorResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create-monitors"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:create-monitors"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/monitors\/{monitor}": {
            "get": {
                "operationId": "organizations.servers.monitors.show",
                "description": "Get a specific monitor associated with the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get server monitor",
                "tags": [
                    "Monitors"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "monitor",
                        "in": "path",
                        "required": true,
                        "description": "The monitor ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`MonitorResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/MonitorResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.servers.monitors.destroy",
                "description": "Remove a monitor from the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete server monitor",
                "tags": [
                    "Monitors"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "monitor",
                        "in": "path",
                        "required": true,
                        "description": "The monitor ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:delete-monitors"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:delete-monitors"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/nginx\/templates": {
            "get": {
                "operationId": "organizations.servers.nginx.templates.index",
                "description": "List all nginx templates for the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List Nginx templates",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `created_at`, `updated_at`, `name`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-created_at`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[name]",
                        "in": "query",
                        "description": "The name of the template.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "custom"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `NginxTemplateResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/NginxTemplateResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.nginx.templates.store",
                "description": "Create a new nginx template on the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Create Nginx template",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateNginxTemplateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`NginxTemplateResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/NginxTemplateResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-nginx-templates"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-nginx-templates"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/nginx\/templates\/{nginxTemplate}": {
            "get": {
                "operationId": "organizations.servers.nginx.templates.show",
                "description": "Get a specific nginx template associated with the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get Nginx template",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nginxTemplate",
                        "in": "path",
                        "required": true,
                        "description": "The nginx template ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`NginxTemplateResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/NginxTemplateResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.nginx.templates.update",
                "description": "Update the specified nginx template on the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Update Nginx template",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nginxTemplate",
                        "in": "path",
                        "required": true,
                        "description": "The nginx template ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateNginxTemplateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`NginxTemplateResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/NginxTemplateResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-nginx-templates"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-nginx-templates"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.servers.nginx.templates.destroy",
                "description": "Delete the specified nginx template from the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Delete Nginx template",
                "tags": [
                    "Nginx"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nginxTemplate",
                        "in": "path",
                        "required": true,
                        "description": "The nginx template ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-nginx-templates"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-nginx-templates"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs": {
            "get": {
                "operationId": "organizations.index",
                "description": "Show all organizations the user has access to.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List organizations",
                "tags": [
                    "Organizations"
                ],
                "parameters": [
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `OrganizationResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/OrganizationResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "organization:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "organization:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}": {
            "get": {
                "operationId": "organizations.show",
                "description": "Show a specific organization for the user.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get organization",
                "tags": [
                    "Organizations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`OrganizationResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/OrganizationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": []
                    }
                ],
                "x-permissions": [
                    "organization:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/server-credentials": {
            "get": {
                "operationId": "organizations.server-credentials.index",
                "description": "Show all server credentials for the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List server credentials",
                "tags": [
                    "Organizations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ServerCredentialResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ServerCredentialResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "credential:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "credential:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/server-credentials\/{credential}": {
            "get": {
                "operationId": "organizations.server-credentials.show",
                "description": "Show a specific server credential for the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get server credential",
                "tags": [
                    "Organizations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "credential",
                        "in": "path",
                        "required": true,
                        "description": "The credential ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ServerCredentialResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ServerCredentialResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "credential:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "credential:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/server-credentials\/{credential}\/regions\/{region}\/vpcs": {
            "post": {
                "operationId": "organizations.server-credentials.vpcs.store",
                "description": "Create a private network for the provider.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Create a new VPC",
                "tags": [
                    "Organizations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "credential",
                        "in": "path",
                        "required": true,
                        "description": "The credential ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "region",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateServerProviderNetworkRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`VpcResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VpcResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:create"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "get": {
                "operationId": "organizations.server-credentials.vpcs.index",
                "description": "List VPCs for the provider.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List VPCs",
                "tags": [
                    "Organizations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "credential",
                        "in": "path",
                        "required": true,
                        "description": "The credential ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "region",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `VpcResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VpcResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "path",
                                                "per_page",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "credential:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/server-credentials\/{credential}\/regions\/{region}\/vpcs\/{vpcId}": {
            "get": {
                "operationId": "organizations.server-credentials.vpcs.show",
                "description": "Get a VPC for the provider.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get VPC",
                "tags": [
                    "Organizations"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "credential",
                        "in": "path",
                        "required": true,
                        "description": "The credential ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "region",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vpcId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`VpcResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VpcResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "credential:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/providers": {
            "get": {
                "operationId": "providers.index",
                "description": "Show all providers\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List providers",
                "tags": [
                    "Providers"
                ],
                "parameters": [
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ProviderResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ProviderResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": []
                    }
                ],
                "x-permissions": [],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/providers\/{provider}": {
            "get": {
                "operationId": "providers.show",
                "description": "Show the provider.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get provider",
                "tags": [
                    "Providers"
                ],
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "required": true,
                        "description": "The provider ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ProviderResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ProviderResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": []
                    }
                ],
                "x-permissions": [],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/providers\/{provider}\/sizes": {
            "get": {
                "operationId": "providers.sizes.index",
                "description": "Show all providers\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List provider sizes",
                "tags": [
                    "Providers"
                ],
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "required": true,
                        "description": "The provider ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ProviderSizeResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ProviderSizeResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": []
                    }
                ],
                "x-permissions": [],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/providers\/{provider}\/sizes\/{providerSize}": {
            "get": {
                "operationId": "providers.sizes.show",
                "description": "Show the provider size.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get provider size",
                "tags": [
                    "Providers"
                ],
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "required": true,
                        "description": "The provider ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "providerSize",
                        "in": "path",
                        "required": true,
                        "description": "The provider size ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ProviderSizeResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ProviderSizeResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": []
                    }
                ],
                "x-permissions": [],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/providers\/{provider}\/regions": {
            "get": {
                "operationId": "providers.regions.index",
                "description": "Show all provider regions\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List provider regions",
                "tags": [
                    "Providers"
                ],
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "required": true,
                        "description": "The provider ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ProviderRegionResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ProviderRegionResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": []
                    }
                ],
                "x-permissions": [],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/providers\/{provider}\/regions\/{providerRegion}": {
            "get": {
                "operationId": "providers.regions.show",
                "description": "Show the provider region.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get provider region",
                "tags": [
                    "Providers"
                ],
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "required": true,
                        "description": "The provider ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "providerRegion",
                        "in": "path",
                        "required": true,
                        "description": "The provider region ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ProviderRegionResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ProviderRegionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": []
                    }
                ],
                "x-permissions": [],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/providers\/{provider}\/regions\/{providerRegion}\/sizes": {
            "get": {
                "operationId": "providers.regions.sizes.index",
                "description": "Show all provider region sizes\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List provider region sizes",
                "tags": [
                    "Providers"
                ],
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "required": true,
                        "description": "The provider ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "providerRegion",
                        "in": "path",
                        "required": true,
                        "description": "The provider region ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ProviderRegionSizeResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ProviderRegionSizeResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": []
                    }
                ],
                "x-permissions": [],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/providers\/{provider}\/regions\/{providerRegion}\/sizes\/{providerSize}": {
            "get": {
                "operationId": "providers.regions.sizes.show",
                "description": "Show the provider region size.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get provider region size",
                "tags": [
                    "Providers"
                ],
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "required": true,
                        "description": "The provider ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "providerRegion",
                        "in": "path",
                        "required": true,
                        "description": "The provider region ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "providerSize",
                        "in": "path",
                        "required": true,
                        "description": "The provider size ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ProviderRegionSizeResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ProviderRegionSizeResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": []
                    }
                ],
                "x-permissions": [],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/recipes": {
            "get": {
                "operationId": "organizations.recipes.index",
                "description": "Show all recipes for the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List organization recipes",
                "tags": [
                    "Recipes"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `RecipeResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/RecipeResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "recipe:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "recipe:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organization.recipes.store",
                "description": "Create a new recipe for the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Create recipe",
                "tags": [
                    "Recipes"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateRecipeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`RecipeResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/RecipeResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "recipe:manage"
                        ]
                    }
                ],
                "x-permissions": [
                    "recipe:manage"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/recipes\/{recipe}": {
            "get": {
                "operationId": "organizations.recipes.show",
                "description": "Show the recipe for the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get recipe",
                "tags": [
                    "Recipes"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recipe",
                        "in": "path",
                        "required": true,
                        "description": "The recipe ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`RecipeResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/RecipeResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "recipe:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "recipe:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.recipes.update",
                "description": "Update a recipe in the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Update recipe",
                "tags": [
                    "Recipes"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recipe",
                        "in": "path",
                        "required": true,
                        "description": "The recipe ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateRecipeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`RecipeResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/RecipeResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "recipe:manage"
                        ]
                    }
                ],
                "x-permissions": [
                    "recipe:manage"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.recipes.destroy",
                "description": "Delete a recipe from the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Delete recipe",
                "tags": [
                    "Recipes"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recipe",
                        "in": "path",
                        "required": true,
                        "description": "The recipe ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted recipe\n\n\n\nNo content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "recipe:manage"
                        ]
                    }
                ],
                "x-permissions": [
                    "recipe:manage"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/recipes\/{recipe}\/runs": {
            "get": {
                "operationId": "organizations.recipes.runs.index",
                "description": "Show all runs for the recipe.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List recipe runs",
                "tags": [
                    "Recipes"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recipe",
                        "in": "path",
                        "required": true,
                        "description": "The recipe ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `RecipeLogResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/RecipeLogResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "recipe:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "recipe:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.recipes.runs.store",
                "description": "Run a given recipe on a list of servers.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create recipe run",
                "tags": [
                    "Recipes"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recipe",
                        "in": "path",
                        "required": true,
                        "description": "The recipe ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RunRecipeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Recipe run accepted"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "recipe:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "recipe:manage"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/recipes\/{recipe}\/runs\/{log}": {
            "get": {
                "operationId": "organizations.recipes.runs.show",
                "description": "Show a specific run for the recipe.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get recipe run",
                "tags": [
                    "Recipes"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recipe",
                        "in": "path",
                        "required": true,
                        "description": "The recipe ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "log",
                        "in": "path",
                        "required": true,
                        "description": "The log ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`RecipeLogResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/RecipeLogResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "recipe:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "recipe:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/teams\/{team}\/recipes": {
            "get": {
                "operationId": "organizations.teams.recipes.index",
                "description": "Show all recipes for the team.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List team recipes",
                "tags": [
                    "Recipes"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `RecipeResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/RecipeResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "recipe:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "recipe:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.teams.recipes.store",
                "description": "Shares a recipe with a team.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Share recipe with the team",
                "tags": [
                    "Recipes"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ShareRecipeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Recipe shared successfully\n\n\n\n`RecipeResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/RecipeResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "recipe:manage",
                            "recipe:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "recipe:view",
                    "recipe:manage"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/teams\/{team}\/recipes\/{recipe}": {
            "delete": {
                "operationId": "organizations.teams.recipes.destroy",
                "description": "Unshare a recipe with a team.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Delete a recipe share",
                "tags": [
                    "Recipes"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "recipe",
                        "in": "path",
                        "required": true,
                        "description": "The recipe ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Recipe unshared successfully\n\n\n\nNo content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "recipe:manage",
                            "recipe:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "recipe:view",
                    "recipe:manage"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/forge-recipes": {
            "get": {
                "operationId": "forge-recipes.index",
                "description": "Show all Forge provided recipes.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List Forge's recipes",
                "tags": [
                    "Recipes"
                ],
                "parameters": [
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ForgeRecipeResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ForgeRecipeResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "recipe:view"
                        ]
                    }
                ],
                "x-permissions": [],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/forge-recipes\/{forgeRecipe}": {
            "get": {
                "operationId": "forge-recipes.show",
                "description": "Show the Forge recipe.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get Forge recipe",
                "tags": [
                    "Recipes"
                ],
                "parameters": [
                    {
                        "name": "forgeRecipe",
                        "in": "path",
                        "required": true,
                        "description": "The forge recipe ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ForgeRecipeResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ForgeRecipeResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "recipe:view"
                        ]
                    }
                ],
                "x-permissions": [],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/forge-recipes\/{forgeRecipe}\/runs": {
            "post": {
                "operationId": "forge-recipes.runs.store",
                "description": "Run a Forge recipe on specified servers.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create Forge recipe run",
                "tags": [
                    "Recipes"
                ],
                "parameters": [
                    {
                        "name": "forgeRecipe",
                        "in": "path",
                        "required": true,
                        "description": "The forge recipe ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RunRecipeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Recipe run accepted"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "recipe:view"
                        ]
                    }
                ],
                "x-permissions": [],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/redirect-rules": {
            "get": {
                "operationId": "organizations.servers.sites.redirect-rules.index",
                "description": "List all redirect rules associated with the site.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List site redirect rules",
                "tags": [
                    "Redirect Rules"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `created_at`, `updated_at`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-created_at`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[from]",
                        "in": "query",
                        "description": "The source URL path for the redirect rule.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "\/old-path"
                            ]
                        }
                    },
                    {
                        "name": "filter[to]",
                        "in": "query",
                        "description": "The destination URL path for the redirect rule.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "\/new-path"
                            ]
                        }
                    },
                    {
                        "name": "filter[type]",
                        "in": "query",
                        "description": "The type of the redirect rule.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "permanent"
                            ]
                        }
                    },
                    {
                        "name": "filter[status]",
                        "in": "query",
                        "description": "The status of the redirect rule.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "installed"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `RedirectRuleResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/RedirectRuleResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-redirects"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-redirects"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.sites.redirect-rules.store",
                "description": "Add a new redirect rule to the site.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create site redirect rule",
                "tags": [
                    "Redirect Rules"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateRedirectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-redirects"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-redirects"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/redirect-rules\/{redirectRule}": {
            "get": {
                "operationId": "organizations.servers.sites.redirect-rules.show",
                "description": "Get a specific redirect rule associated with the site.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get site redirect rule",
                "tags": [
                    "Redirect Rules"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "redirectRule",
                        "in": "path",
                        "required": true,
                        "description": "The redirect rule ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`RedirectRuleResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/RedirectRuleResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-redirects"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-redirects"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.servers.sites.redirect-rules.destroy",
                "description": "Remove a redirect rule from the site.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete site redirect rule",
                "tags": [
                    "Redirect Rules"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "redirectRule",
                        "in": "path",
                        "required": true,
                        "description": "The redirect rule ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-redirects"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-redirects"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/predefined-roles": {
            "get": {
                "operationId": "predefined-roles.index",
                "description": "Show all predefined roles.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List predefined roles",
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Available includes are `permissions`, `permissionsCount`, `permissionsExists`. You can include multiple options by separating them with a comma.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[name]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[permissions.name]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `PredefinedRoleResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/PredefinedRoleResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        },
                                        "included": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/PermissionResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": []
                    }
                ],
                "x-permissions": [],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/predefined-roles\/{role}": {
            "get": {
                "operationId": "predefined-roles.show",
                "description": "Show a specific predefined role.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get predefined role",
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "required": true,
                        "description": "The role ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`PredefinedRoleResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/PredefinedRoleResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": []
                    }
                ],
                "x-permissions": [],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/permissions": {
            "get": {
                "operationId": "permissions.index",
                "description": "Show all permissions.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List permissions",
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[name]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `PermissionResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/PermissionResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": []
                    }
                ],
                "x-permissions": [],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/permissions\/{permission}": {
            "get": {
                "operationId": "permissions.show",
                "description": "Show a specific permission.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get permission",
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "name": "permission",
                        "in": "path",
                        "required": true,
                        "description": "The permission ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`PermissionResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/PermissionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": []
                    }
                ],
                "x-permissions": [],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/roles": {
            "post": {
                "operationId": "organizations.roles.store",
                "description": "Create a new role for the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Create role",
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateRoleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CustomRoleResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CustomRoleResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "organization:manage"
                        ]
                    }
                ],
                "x-permissions": [
                    "organization:manage"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "get": {
                "operationId": "organizations.roles.index",
                "description": "Show all roles for the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List roles",
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Available includes are `permissions`, `permissionsCount`, `permissionsExists`. You can include multiple options by separating them with a comma.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[name]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[permissions.name]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `CustomRoleResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/CustomRoleResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        },
                                        "included": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/PermissionResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "organization:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "organization:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/roles\/{role}": {
            "get": {
                "operationId": "organizations.roles.show",
                "description": "Show a specific role for the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get role",
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "in": "path",
                        "required": true,
                        "description": "The role ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`CustomRoleResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CustomRoleResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "organization:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "organization:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.roles.update",
                "description": "Update a role for the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Update role",
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "in": "path",
                        "required": true,
                        "description": "The role ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#\/components\/schemas\/UpdateRoleRequest"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "description": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CustomRoleResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CustomRoleResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "organization:manage"
                        ]
                    }
                ],
                "x-permissions": [
                    "organization:manage"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.roles.destroy",
                "description": "Delete a role from the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Delete role",
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "in": "path",
                        "required": true,
                        "description": "The role ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Role removed successfully\n\n\n\nNo content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "organization:manage"
                        ]
                    }
                ],
                "x-permissions": [
                    "organization:manage"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/roles\/{role}\/permissions": {
            "get": {
                "operationId": "organizations.roles.permissions.index",
                "description": "Show all permissions for the role.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List role permissions",
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "in": "path",
                        "required": true,
                        "description": "The role ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[name]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `PermissionResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/PermissionResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "organization:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "organization:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/ssh-keys": {
            "get": {
                "operationId": "organizations.servers.ssh-keys.index",
                "description": "List all SSH keys associated with the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List server SSH keys",
                "tags": [
                    "SSH Keys"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[name]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[user]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `KeyResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/KeyResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.ssh-keys.store",
                "description": "Add a new SSH key to the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create server SSH key",
                "tags": [
                    "SSH Keys"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateSshKeyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Adding SSH key to server accepted"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create-keys"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:create-keys"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/ssh-keys\/{key}": {
            "get": {
                "operationId": "organizations.servers.ssh-keys.show",
                "description": "Get a specific SSH key associated with the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get server SSH key",
                "tags": [
                    "SSH Keys"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "description": "The key ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`KeyResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/KeyResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.servers.ssh-keys.destroy",
                "description": "Remove an SSH key from the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete server SSH key",
                "tags": [
                    "SSH Keys"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "description": "The key ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Removal of SSH key from server accepted"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:delete-keys"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:delete-keys"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/key": {
            "get": {
                "operationId": "organizations.servers.key.show",
                "description": "Get the public SSH key for the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get server public SSH key",
                "tags": [
                    "SSH Keys"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ServerKeyResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ServerKeyResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:archive"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.key.update",
                "description": "Regenerate the SSH key pair for the server and return the new public key.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Update server public SSH key",
                "tags": [
                    "SSH Keys"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ServerKeyResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ServerKeyResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:archive"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:archive"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/scheduled-jobs": {
            "get": {
                "operationId": "organizations.servers.scheduled-jobs.index",
                "description": "List all scheduled jobs associated with the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List server scheduled jobs",
                "tags": [
                    "Scheduled Jobs"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `created_at`, `updated_at`, `status`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-created_at`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[status]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[user]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `JobResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/JobResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.scheduled-jobs.store",
                "description": "Create a specific scheduled job.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create scheduled job",
                "tags": [
                    "Scheduled Jobs"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateScheduledJobRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "`JobResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/JobResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/scheduled-jobs\/{job}": {
            "get": {
                "operationId": "organizations.servers.scheduled-jobs.show",
                "description": "Show a specific scheduled job.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get scheduled job",
                "tags": [
                    "Scheduled Jobs"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "job",
                        "in": "path",
                        "required": true,
                        "description": "The job ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`JobResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/JobResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.servers.scheduled-jobs.destroy",
                "description": "Delete a specific scheduled job.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete scheduled job",
                "tags": [
                    "Scheduled Jobs"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "job",
                        "in": "path",
                        "required": true,
                        "description": "The job ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Removal of scheduled job from server accepted"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/scheduled-jobs\/{job}\/output": {
            "get": {
                "operationId": "organizations.servers.scheduled-jobs.outputs.show",
                "description": "Show a specific scheduled job output.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get scheduled job output",
                "tags": [
                    "Scheduled Jobs"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "job",
                        "in": "path",
                        "required": true,
                        "description": "The job ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`JobOutputResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/JobOutputResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/security-rules": {
            "get": {
                "operationId": "organizations.servers.sites.security-rules.index",
                "description": "List all security rules associated with the site.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List site security rules",
                "tags": [
                    "Security Rules"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `path`, `status`, `created_at`, `updated_at`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-path`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[path]",
                        "in": "query",
                        "description": "The path for the security rule.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "\/admin"
                            ]
                        }
                    },
                    {
                        "name": "filter[status]",
                        "in": "query",
                        "description": "The status of the security rule.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "installed"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `SecurityRuleResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SecurityRuleResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-security"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-security"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.sites.security-rules.store",
                "description": "Add a new security rule to the site.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create site security rule",
                "tags": [
                    "Security Rules"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateSecurityRuleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "`SecurityRuleResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SecurityRuleResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-security"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-security"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/security-rules\/{securityRule}": {
            "get": {
                "operationId": "organizations.servers.sites.security-rules.show",
                "description": "Get a specific security rule associated with the site.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get site security rule",
                "tags": [
                    "Security Rules"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "securityRule",
                        "in": "path",
                        "required": true,
                        "description": "The security rule ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`SecurityRuleResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SecurityRuleResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-security"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-security"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.sites.security-rules.update",
                "description": "Update an existing security rule for a site.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update site security rule",
                "tags": [
                    "Security Rules"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "securityRule",
                        "in": "path",
                        "required": true,
                        "description": "The security rule ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateSecurityRuleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-security"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-security"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            },
            "delete": {
                "operationId": "organizations.servers.sites.security-rules.destroy",
                "description": "Remove a security rule from the site.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete site security rule",
                "tags": [
                    "Security Rules"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "securityRule",
                        "in": "path",
                        "required": true,
                        "description": "The security rule ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-security"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-security"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/teams\/{team}\/server-credentials": {
            "get": {
                "operationId": "organizations.teams.server-credentials.index",
                "description": "Show all server credentials for the team.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List team server credentials",
                "tags": [
                    "Server Credentials"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ServerCredentialResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ServerCredentialResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "credential:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "credential:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.teams.server-credentials.store",
                "description": "Share a server credential with a team.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Create a new server credential share",
                "tags": [
                    "Server Credentials"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ShareCredentialRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`ServerCredentialResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ServerCredentialResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "credential:manage",
                            "credential:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "credential:manage",
                    "credential:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/teams\/{team}\/server-credentials\/{credential}": {
            "delete": {
                "operationId": "organizations.teams.server-credentials.destroy",
                "description": "Unshare a server credential with a team.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Delete a server credential share",
                "tags": [
                    "Server Credentials"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "credential",
                        "in": "path",
                        "required": true,
                        "description": "The credential ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Server credential unshared successfully\n\n\n\nNo content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "credential:manage",
                            "credential:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "credential:manage",
                    "credential:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers": {
            "get": {
                "operationId": "organizations.servers.index",
                "description": "Show all servers for the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List servers",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `name`, `provider`, `ubuntu_version`, `region`, `php_version`, `created_at`, `updated_at`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-name`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[ip_address]",
                        "in": "query",
                        "description": "The IP address of the server.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "192.168.1.1"
                            ]
                        }
                    },
                    {
                        "name": "filter[name]",
                        "in": "query",
                        "description": "The name of the server.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "production-web-01"
                            ]
                        }
                    },
                    {
                        "name": "filter[region]",
                        "in": "query",
                        "description": "The region where the server is located.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "nyc3"
                            ]
                        }
                    },
                    {
                        "name": "filter[size]",
                        "in": "query",
                        "description": "The size of the server.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "s-2vcpu-2gb"
                            ]
                        }
                    },
                    {
                        "name": "filter[provider]",
                        "in": "query",
                        "description": "The provider of the server.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "ocean2"
                            ]
                        }
                    },
                    {
                        "name": "filter[ubuntu_version]",
                        "in": "query",
                        "description": "The Ubuntu version of the server.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                24.04
                            ]
                        }
                    },
                    {
                        "name": "filter[php_version]",
                        "in": "query",
                        "description": "The PHP version of the server.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "php83"
                            ]
                        }
                    },
                    {
                        "name": "filter[database_type]",
                        "in": "query",
                        "description": "The database type of the server.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "mysql"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ServerResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ServerResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        },
                                        "included": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/TagResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.store",
                "description": "Create a new server in the organization. Supports both standard cloud providers\nand custom VPS configurations.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create server",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#\/components\/schemas\/CreateServerRequest"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "add_key_to_source_control": {
                                                "type": "boolean",
                                                "default": true
                                            },
                                            "database": {
                                                "type": "string"
                                            },
                                            "laravel": {
                                                "type": "object",
                                                "properties": {
                                                    "vpc_uuid": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "hetzner": {
                                                "type": "object",
                                                "properties": {
                                                    "enable_weekly_backups": {
                                                        "type": "boolean",
                                                        "default": false
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:create"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/archives": {
            "get": {
                "operationId": "organizations.servers.archives.index",
                "description": "Get all archived servers for the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List archived servers",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `created_at`, `updated_at`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-created_at`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ServerResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ServerResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        },
                                        "included": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/TagResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.archives.store",
                "description": "Archive a server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create an archived server",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ArchiveRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:archive"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:archive"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/archives\/{server}": {
            "delete": {
                "operationId": "organizations.servers.archives.destroy",
                "description": "Unarchive a server.\nMake sure you have regenerated the server key and added it to the server before unarchiving.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete archived server",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:archive"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:archive"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/background-processes\/{backgroundProcess}\/actions": {
            "post": {
                "operationId": "organizations.servers.background-processes.actions.store",
                "description": "Run an action on a server-level background process.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Perform an action on a server background process",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "backgroundProcess",
                        "in": "path",
                        "required": true,
                        "description": "The background process ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/BackgroundProcessActionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create-daemons"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:create-daemons"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/actions": {
            "post": {
                "operationId": "organizations.servers.actions.store",
                "description": "Run an action on a server, defined by the action type parameter.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create server action",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ServerActionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-services"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-services"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/services\/nginx\/actions": {
            "post": {
                "operationId": "organizations.servers.services.nginx.actions.store",
                "description": "Run an action on the Nginx service.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Perform Nginx action",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/NginxServiceActionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-services"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-services"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/services\/postgres\/actions": {
            "post": {
                "operationId": "organizations.servers.services.postgres.actions.store",
                "description": "Run an action on the Postgres service.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Perform Postgres action",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PostgresServiceActionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-services"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-services"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/services\/redis\/actions": {
            "post": {
                "operationId": "organizations.servers.services.redis.actions.store",
                "description": "Run an action on the Redis service.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Perform Redis action",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/RedisServiceActionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-services"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-services"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/services\/mysql\/actions": {
            "post": {
                "operationId": "organizations.servers.services.mysql.actions.store",
                "description": "Run an action on the MySQL service.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Perform MySQL action",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/MysqlServiceActionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-services"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-services"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/services\/php\/actions": {
            "post": {
                "operationId": "organizations.servers.services.php.actions.store",
                "description": "Run an action on a specific PHP version.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Perform PHP action",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PhpServiceActionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-services"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-services"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/services\/supervisor\/actions": {
            "post": {
                "operationId": "organizations.servers.services.supervisor.actions.store",
                "description": "Run an action on the Supervisor service.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Perform Supervisor action",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SupervisorServiceActionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-services"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-services"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}": {
            "get": {
                "operationId": "organizations.servers.show",
                "description": "Show a specific server for the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get server",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ServerResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ServerResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.servers.destroy",
                "description": "Delete a server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete server",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:delete"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:delete"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/events": {
            "get": {
                "operationId": "organizations.servers.events.index",
                "description": "List all events associated with the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List server events",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `created_at`, `updated_at`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-created_at`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Available includes are `initiator`, `initiatorCount`, `initiatorExists`. You can include multiple options by separating them with a comma.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[initiated_by]",
                        "in": "query",
                        "description": "The user ID of the event initiator.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                1
                            ]
                        }
                    },
                    {
                        "name": "filter[ran_as]",
                        "in": "query",
                        "description": "The server user that the event was run as.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "forge"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `EventResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/EventResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        },
                                        "included": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/UserResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/events\/{event}": {
            "get": {
                "operationId": "organizations.servers.events.show",
                "description": "Get a specific event associated with the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get server event",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "event",
                        "in": "path",
                        "required": true,
                        "description": "The event ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`EventResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/EventResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/events\/{event}\/output": {
            "get": {
                "operationId": "organizations.servers.events.output.show",
                "description": "Get the output for a specific event associated with the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get server event output",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "event",
                        "in": "path",
                        "required": true,
                        "description": "The event ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`EventOutputResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/EventOutputResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/php\/cli-version": {
            "get": {
                "operationId": "organizations.servers.php.cli-version.show",
                "description": "Show the PHP CLI version which has been set for the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get PHP CLI version",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`PhpVersionResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/PhpVersionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.php.cli-version.update",
                "description": "Update the PHP CLI version for the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update PHP CLI version",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdatePhpCliVersionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-php"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-php"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/php\/site-version": {
            "get": {
                "operationId": "organizations.servers.php.site-version.show",
                "description": "Show the PHP site version which has been set for the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get PHP site version",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`PhpVersionResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/PhpVersionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.php.site-version.update",
                "description": "Update the PHP site version for the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update PHP site version",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdatePhpCliVersionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-php"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-php"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/php\/versions": {
            "get": {
                "operationId": "organizations.servers.php.versions.index",
                "description": "List all PHP versions installed on the server\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List PHP versions for server",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `created_at`, `updated_at`, `status`, `version`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-created_at`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[status]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[version]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `PhpVersionResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/PhpVersionResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.php.versions.store",
                "description": "Install a new PHP version on the server\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Install new PHP version",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreatePhpVersionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-php"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-php"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/php\/versions\/{phpVersion}": {
            "get": {
                "operationId": "organizations.servers.php.versions.show",
                "description": "Show the PHP version which has been installed on the server\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get PHP version",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "phpVersion",
                        "in": "path",
                        "required": true,
                        "description": "The php version ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`PhpVersionResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/PhpVersionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.php.versions.update",
                "description": "Update PHP version to the latest patch release\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update installed PHP version",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "phpVersion",
                        "in": "path",
                        "required": true,
                        "description": "The php version ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-php"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-php"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            },
            "delete": {
                "operationId": "organizations.servers.php.versions.destroy",
                "description": "Uninstall the PHP version from the server\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete installed PHP version",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "phpVersion",
                        "in": "path",
                        "required": true,
                        "description": "The php version ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-php"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-php"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/php\/versions\/{phpVersion}\/configs\/fpm": {
            "get": {
                "operationId": "organizations.servers.php.versions.configs.fpm.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get PHP version FPM config",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "phpVersion",
                        "in": "path",
                        "required": true,
                        "description": "The php version ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`PhpFpmConfigurationResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/PhpFpmConfigurationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.php.versions.configs.fpm.update",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update PHP version FPM config",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "phpVersion",
                        "in": "path",
                        "required": true,
                        "description": "The php version ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdatePhpFpmRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-php"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-php"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/php\/versions\/{phpVersion}\/configs\/cli": {
            "get": {
                "operationId": "organizations.servers.php.versions.configs.cli.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get PHP version CLI config",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "phpVersion",
                        "in": "path",
                        "required": true,
                        "description": "The php version ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`PhpCliConfigurationResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/PhpCliConfigurationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.php.versions.configs.cli.update",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update PHP version CLI config",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "phpVersion",
                        "in": "path",
                        "required": true,
                        "description": "The php version ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdatePhpCliRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-php"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-php"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/php\/versions\/{phpVersion}\/configs\/pool": {
            "get": {
                "operationId": "organizations.servers.php.versions.configs.pool.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get PHP version pool config",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "phpVersion",
                        "in": "path",
                        "required": true,
                        "description": "The php version ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`PhpPoolConfigurationResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/PhpPoolConfigurationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.php.versions.configs.pool.update",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update PHP version pool config",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "phpVersion",
                        "in": "path",
                        "required": true,
                        "description": "The php version ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdatePhpPoolRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-php"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-php"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/php\/max-upload-size": {
            "get": {
                "operationId": "organizations.servers.php.max-upload-size.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get server PHP max upload size",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`PhpMaxUploadSizeResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/PhpMaxUploadSizeResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.php.max-upload-size.update",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update server PHP max upload size",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdatePhpSettingsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-php"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-php"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/php\/max-execution-time": {
            "get": {
                "operationId": "organizations.servers.php.max-execution-time.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get server PHP max execution time",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`PhpMaxExecutionTimeResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/PhpMaxExecutionTimeResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.php.max-execution-time.update",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update server PHP max execution time",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdatePhpSettingsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-php"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-php"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/php\/opcache": {
            "get": {
                "operationId": "organizations.servers.php.opcache.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get server PHP OPcache status",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`PhpOpcacheResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/PhpOpcacheResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.php.opcache.store",
                "description": "Enable PHP OPcache for the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create PHP OPcache config",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-php"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-php"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            },
            "delete": {
                "operationId": "organizations.servers.php.opcache.destroy",
                "description": "Disable PHP OPcache for the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete PHP OPcache config",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-php"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-php"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/teams\/{team}\/servers": {
            "get": {
                "operationId": "organizations.teams.servers.index",
                "description": "Show all servers for the team.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List team servers",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ServerResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ServerResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        },
                                        "included": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/TagResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.teams.servers.store",
                "description": "Share a server with a team.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Create a new server share",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ShareServerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`ServerResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ServerResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view",
                    "team:create"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/teams\/{team}\/servers\/{server}": {
            "delete": {
                "operationId": "organizations.teams.servers.destroy",
                "description": "Unshare a server with a team.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Delete a server share",
                "tags": [
                    "Servers"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Server unshared successfully\n\n\n\nNo content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:create"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view",
                    "team:create"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/sites": {
            "get": {
                "operationId": "sites.index",
                "description": "Show all sites the current token has access to.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List sites",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Available includes are `tags`, `tagsCount`, `tagsExists`, `latestDeployment`, `latestDeploymentCount`, `latestDeploymentExists`. You can include multiple options by separating them with a comma.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[name]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `SiteResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SiteResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        },
                                        "included": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "$ref": "#\/components\/schemas\/TagResource"
                                                    },
                                                    {
                                                        "$ref": "#\/components\/schemas\/DeploymentResource"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/sites": {
            "get": {
                "operationId": "organizations.sites.index",
                "description": "Show all sites for the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List sites for Organization",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Available includes are `tags`, `tagsCount`, `tagsExists`, `latestDeployment`, `latestDeploymentCount`, `latestDeploymentExists`. You can include multiple options by separating them with a comma.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[name]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `SiteResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SiteResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        },
                                        "included": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "$ref": "#\/components\/schemas\/TagResource"
                                                    },
                                                    {
                                                        "$ref": "#\/components\/schemas\/DeploymentResource"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/sites\/{site}": {
            "get": {
                "operationId": "organizations.sites.show",
                "description": "Show the specified site.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get site",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`SiteResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SiteResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites": {
            "get": {
                "operationId": "organizations.servers.sites.index",
                "description": "List all sites associated with the server.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List sites for server",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `name`, `created_at`, `updated_at`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-name`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Available includes are `tags`, `tagsCount`, `tagsExists`, `latestDeployment`, `latestDeploymentCount`, `latestDeploymentExists`. You can include multiple options by separating them with a comma.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[name]",
                        "in": "query",
                        "description": "The name of the site.",
                        "schema": {
                            "type": "string",
                            "examples": [
                                "forge.laravel.com"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `SiteResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SiteResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        },
                                        "included": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "$ref": "#\/components\/schemas\/TagResource"
                                                    },
                                                    {
                                                        "$ref": "#\/components\/schemas\/DeploymentResource"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.sites.store",
                "description": "Add a new site to the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create site",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateSiteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "`SiteResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SiteResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:create"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:create"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}": {
            "put": {
                "operationId": "organizations.servers.sites.update",
                "description": "Update a site on the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update site",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateSiteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:create"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:create"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            },
            "delete": {
                "operationId": "organizations.servers.sites.destroy",
                "description": "Remove a site from the server.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete site",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:delete"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:delete"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/domains": {
            "get": {
                "operationId": "organizations.servers.sites.domains.index",
                "description": "Show all domains for the site.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List domains",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `name`, `created_at`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-name`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter[status]",
                        "in": "query",
                        "description": "The status of the domain.",
                        "schema": {
                            "examples": [
                                "enabled"
                            ],
                            "$ref": "#\/components\/schemas\/DomainRecordStatus"
                        }
                    },
                    {
                        "name": "filter[type]",
                        "in": "query",
                        "description": "The type of domain.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "primary",
                                "alias"
                            ],
                            "examples": [
                                "primary"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `DomainRecordResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DomainRecordResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:meta"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:meta"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.sites.domains.store",
                "description": "Add a new domain to the site\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create domain",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateDomainRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "`DomainRecordResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DomainRecordResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:meta"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:meta"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/domains\/{domainRecord}": {
            "get": {
                "operationId": "organizations.servers.sites.domains.show",
                "description": "Show the specified domain for the site\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get domain",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "domainRecord",
                        "in": "path",
                        "required": true,
                        "description": "The domain record ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`DomainRecordResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DomainRecordResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:meta"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:meta"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "patch": {
                "operationId": "organizations.servers.sites.domains.update",
                "description": "Update an existing domain for the site\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update domain",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "domainRecord",
                        "in": "path",
                        "required": true,
                        "description": "The domain record ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateDomainRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`DomainRecordResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DomainRecordResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:meta"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:meta"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            },
            "delete": {
                "operationId": "organizations.servers.sites.domains.destroy",
                "description": "Remove a domain from the site\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete domain",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "domainRecord",
                        "in": "path",
                        "required": true,
                        "description": "The domain record ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:meta"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:meta"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/domains\/{domainRecord}\/configurations": {
            "get": {
                "operationId": "organizations.servers.sites.domains.configurations",
                "description": "Show the DNS configuration instructions for a domain.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get domain DNS configuration",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "domainRecord",
                        "in": "path",
                        "required": true,
                        "description": "The domain record ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `DomainRecordConfigurationResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DomainRecordConfigurationResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:meta"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:meta"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/domains\/{domainRecord}\/actions": {
            "post": {
                "operationId": "organizations.servers.sites.domains.actions.store",
                "description": "Run an action on a domain, defined by the action type parameter.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create domain action",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "domainRecord",
                        "in": "path",
                        "required": true,
                        "description": "The domain record ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DomainActionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:meta"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:meta"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/domains\/{domainRecord}\/certificate": {
            "get": {
                "operationId": "organizations.servers.sites.domains.certificate.show",
                "description": "Get the certificate for a given domain.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get domain certificate",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "domainRecord",
                        "in": "path",
                        "required": true,
                        "description": "The domain record ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`CertificateResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CertificateResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:meta"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:meta"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.sites.domains.certificate.store",
                "description": "Create a new certificate for a given domain.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create domain certificate",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "domainRecord",
                        "in": "path",
                        "required": true,
                        "description": "The domain record ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateDomainCertificateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "`CertificateResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CertificateResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-ssl"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-ssl"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            },
            "delete": {
                "operationId": "organizations.servers.sites.domains.certificate.destroy",
                "description": "Delete the certificate for a given domain.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete domain certificate",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "domainRecord",
                        "in": "path",
                        "required": true,
                        "description": "The domain record ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-ssl"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-ssl"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/healthcheck": {
            "get": {
                "operationId": "organizations.servers.sites.healthcheck.show",
                "description": "Show the healthcheck endpoint that has been set for the site.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get healthcheck endpoint",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`HealthcheckEndpointResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/HealthcheckEndpointResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-project"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-project"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.sites.healthcheck.update",
                "description": "Update the healthcheck endpoint for the site.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Update healthcheck endpoint",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateHealthcheckEndpointRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-project"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-project"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/environment": {
            "get": {
                "operationId": "organizations.servers.sites.environment.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get .env content",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`EnvironmentResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/EnvironmentResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.sites.environment.update",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update .env content",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateEnvironmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-environment"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-environment"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/nginx": {
            "get": {
                "operationId": "organizations.servers.sites.nginx.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get Nginx configuration",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`NginxConfigResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/NginxConfigResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-nginx"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.sites.nginx.update",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update Nginx configuration",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateNginxConfigurationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-nginx"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-nginx"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/composer\/credentials": {
            "get": {
                "operationId": "organizations.servers.sites.composer.credentials.index",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get composer credentials for the site",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `ComposerCredentialResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ComposerCredentialResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "path",
                                                "per_page",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.sites.composer.credentials.store",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create composer credentials for the site",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateComposerCredentialRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-packages"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-packages"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/composer\/credentials\/{repository}": {
            "get": {
                "operationId": "organizations.servers.sites.composer.credentials.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get composer credential for the site",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "repository",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ComposerCredentialResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ComposerCredentialResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.sites.composer.credentials.update",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update composer credentials for the site",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "repository",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateComposerCredentialRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-packages"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-packages"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            },
            "delete": {
                "operationId": "organizations.servers.sites.composer.credentials.destroy",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete composer credentials for the site",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "repository",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-packages"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-packages"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/load-balancing-nodes": {
            "get": {
                "operationId": "organizations.servers.sites.load-balancing-nodes.index",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List load balancing nodes",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Available sorts are `id`. You can sort by multiple options by separating them with a comma. To sort in descending order, use `-` sign in front of the sort, for example: `-id`.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `LoadBalancingNodeResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/LoadBalancingNodeResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-project"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-project"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.sites.load-balancing-nodes.update",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Update load balancing nodes",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateLoadBalancerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-project"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-project"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/logs\/nginx-access": {
            "get": {
                "operationId": "organizations.servers.sites.logs.nginx-access.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get Nginx access log content",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`NginxAccessLogResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/NginxAccessLogResource"
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "log": {
                                                    "type": "string",
                                                    "enum": [
                                                        "site-nginx-access"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "log"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-logs"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-logs"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.servers.sites.logs.nginx-access.destroy",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete Nginx access log content",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-logs"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-logs"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/logs\/nginx-error": {
            "get": {
                "operationId": "organizations.servers.sites.logs.nginx-error.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get Nginx error log content",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`NginxErrorLogResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/NginxErrorLogResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-logs"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-logs"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.servers.sites.logs.nginx-error.destroy",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete Nginx error log content",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-logs"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-logs"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/logs\/application": {
            "get": {
                "operationId": "organizations.servers.sites.logs.application.show",
                "description": "\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get site log content",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`ApplicationLogResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ApplicationLogResource"
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "log": {
                                                    "type": "string",
                                                    "enum": [
                                                        "site"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "log"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-logs"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-logs"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.servers.sites.logs.application.destroy",
                "description": "\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Delete site log content",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:manage-logs"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:manage-logs"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/heartbeats": {
            "get": {
                "operationId": "organizations.servers.sites.heartbeats.index",
                "description": "Show all heartbeats for the site.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List heartbeats",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `HeartbeatResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/HeartbeatResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.servers.sites.heartbeats.store",
                "description": "Create a new heartbeat for the site.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Create heartbeat",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateHeartbeatRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`HeartbeatResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/HeartbeatResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-heartbeats"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-heartbeats"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/servers\/{server}\/sites\/{site}\/heartbeats\/{heartbeat}": {
            "get": {
                "operationId": "organizations.servers.sites.heartbeats.show",
                "description": "Show a specific heartbeat for the site.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get heartbeat",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "heartbeat",
                        "in": "path",
                        "required": true,
                        "description": "The heartbeat ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`HeartbeatResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/HeartbeatResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "server:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "server:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.servers.sites.heartbeats.update",
                "description": "Update a specific heartbeat for the site.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Update heartbeat",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "heartbeat",
                        "in": "path",
                        "required": true,
                        "description": "The heartbeat ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateHeartbeatRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`HeartbeatResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/HeartbeatResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-heartbeats"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-heartbeats"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.servers.sites.heartbeats.destroy",
                "description": "Delete a specific heartbeat for the site.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Delete heartbeat",
                "tags": [
                    "Sites"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "path",
                        "required": true,
                        "description": "The server ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "site",
                        "in": "path",
                        "required": true,
                        "description": "The site ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "heartbeat",
                        "in": "path",
                        "required": true,
                        "description": "The heartbeat ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "site:manage-heartbeats"
                        ]
                    }
                ],
                "x-permissions": [
                    "site:manage-heartbeats"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/teams": {
            "get": {
                "operationId": "organizations.teams.index",
                "description": "Show all teams for the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List teams",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `TeamResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/TeamResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "team:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "team:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "post": {
                "operationId": "organizations.teams.store",
                "description": "Create a new team for the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Create team",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateTeamRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`TeamResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/TeamResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "team:create"
                        ]
                    }
                ],
                "x-permissions": [
                    "team:create"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/teams\/{team}": {
            "get": {
                "operationId": "organizations.teams.show",
                "description": "Show a specific team for the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get team",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`TeamResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/TeamResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "team:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "team:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.teams.update",
                "description": "Update a team for the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Update team",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateTeamRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`TeamResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/TeamResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "team:create"
                        ]
                    }
                ],
                "x-permissions": [
                    "team:create"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.teams.destroy",
                "description": "Delete a team for the organization.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Delete team",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Team deleted successfully'\n\n\n\nNo content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "team:delete"
                        ]
                    }
                ],
                "x-permissions": [
                    "team:delete"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/teams\/{team}\/members": {
            "get": {
                "operationId": "organizations.teams.members.index",
                "description": "Show all members for the team.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List team members",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `MembershipResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/MembershipResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        },
                                        "included": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "$ref": "#\/components\/schemas\/RoleResource"
                                                    },
                                                    {
                                                        "$ref": "#\/components\/schemas\/PermissionResource"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "team:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "team:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/teams\/{team}\/members\/{user}": {
            "get": {
                "operationId": "organizations.teams.members.show",
                "description": "Show the team member for the team.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get team member",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`MembershipResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/MembershipResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "team:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "team:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.teams.members.destroy",
                "description": "Remove a member from the team.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Delete team member",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Member removed from team\n\n\n\nNo content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "team:delete"
                        ]
                    }
                ],
                "x-permissions": [
                    "team:delete"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "put": {
                "operationId": "organizations.teams.members.update",
                "description": "Update the team member for the team.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Update team member",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateTeamMemberRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`MembershipResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/MembershipResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "team:create"
                        ]
                    }
                ],
                "x-permissions": [
                    "team:create"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/teams\/{team}\/invites": {
            "post": {
                "operationId": "organizations.teams.invites.store",
                "description": "Invite a new member to the team.\n\nProcessing mode: <small><code>async<\/code><\/small>",
                "summary": "Create team invite",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CreateTeamInviteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`TeamInvitationResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/TeamInvitationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "team:create"
                        ]
                    }
                ],
                "x-permissions": [
                    "team:create"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "async"
            },
            "get": {
                "operationId": "organizations.teams.invites.index",
                "description": "Show all pending invitations for the team.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "List team invitations",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Available includes are `role`, `roleCount`, `roleExists`, `team`, `teamCount`, `teamExists`, `organization`, `organizationCount`, `organizationExists`. You can include multiple options by separating them with a comma.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "The number of results that will be returned per page.",
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    },
                    {
                        "name": "page[cursor]",
                        "in": "query",
                        "description": "The cursor to start the pagination from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `TeamInvitationResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/TeamInvitationResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "next_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the next set of items."
                                                },
                                                "prev_cursor": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The \"cursor\" that points to the previous set of items."
                                                }
                                            },
                                            "required": [
                                                "path",
                                                "per_page",
                                                "next_cursor",
                                                "prev_cursor"
                                            ]
                                        },
                                        "included": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "$ref": "#\/components\/schemas\/RoleResource"
                                                    },
                                                    {
                                                        "$ref": "#\/components\/schemas\/TeamResource"
                                                    },
                                                    {
                                                        "$ref": "#\/components\/schemas\/OrganizationResource"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "team:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "team:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/orgs\/{organization}\/teams\/{team}\/invites\/{invitation}": {
            "get": {
                "operationId": "organizations.teams.invites.show",
                "description": "Show a pending invitation for the team.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get team invitation",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "invitation",
                        "in": "path",
                        "required": true,
                        "description": "The invitation ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`TeamInvitationResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/TeamInvitationResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "team:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "team:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            },
            "delete": {
                "operationId": "organizations.teams.invites.destroy",
                "description": "Cancel a pending invitation for the team.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Delete team invitation",
                "tags": [
                    "Teams"
                ],
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "description": "The organization slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "invitation",
                        "in": "path",
                        "required": true,
                        "description": "The invitation ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Invitation deleted\n\n\n\nNo content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "team:delete"
                        ]
                    }
                ],
                "x-permissions": [
                    "team:delete"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/user": {
            "get": {
                "operationId": "user.show",
                "description": "Show the authenticated user.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get user",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "`UserResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/UserResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "user:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "user:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        },
        "\/me": {
            "get": {
                "operationId": "me",
                "description": "Show the authenticated user.\n\nProcessing mode: <small><code>sync<\/code><\/small>",
                "summary": "Get user",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "`UserResource`",
                        "content": {
                            "application\/vnd.api+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/UserResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "user:view"
                        ]
                    }
                ],
                "x-permissions": [
                    "user:view"
                ],
                "x-mint": {
                    "metadata": {
                        "noindex": true
                    }
                },
                "x-processingMode": "sync"
            }
        }
    },
    "components": {
        "securitySchemes": {
            "http": {
                "type": "http",
                "scheme": "bearer"
            },
            "oauth2": {
                "type": "oauth2",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https:\/\/forge.laravel.com\/oauth\/authorize",
                        "tokenUrl": "https:\/\/forge.laravel.com\/oauth\/token",
                        "scopes": {
                            "organization:view": "Allow members to view the organization",
                            "organization:manage": "Allow members to manage the organization",
                            "organization:delete": "Allow members to delete the organization",
                            "server:view": "Allow members to view servers",
                            "server:create": "Allow members to create servers",
                            "server:delete": "Allow members to delete servers",
                            "server:archive": "Allow members to archive servers",
                            "server:transfer": "Allow members to transfer servers to another Forge account",
                            "server:manage-meta": "Allow members to change server settings such as name and IP address",
                            "server:manage-packages": "Allow members to configure and remove server and site package authentication",
                            "server:manage-php": "Allow members to install and change PHP installations",
                            "server:manage-logs": "Allow members to clear server and site logs",
                            "server:manage-network": "Allow members to change the server\u2018s firewall",
                            "server:manage-nginx-templates": "Allow members to manage Nginx templates",
                            "server:manage-services": "Allow members to start, stop and restart services",
                            "server:create-keys": "Allow members to add SSH keys to servers",
                            "server:delete-keys": "Allow members to remove SSH keys from servers",
                            "server:create-monitors": "Allow members to create server monitors",
                            "server:delete-monitors": "Allow members to delete server monitors",
                            "server:create-databases": "Allow members to create databases and database users",
                            "server:delete-databases": "Allow members to delete databases and database users",
                            "server:create-backups": "Allow members to create database backup configurations",
                            "server:delete-backups": "Allow members to delete database backup configurations",
                            "server:create-daemons": "Allow members to create daemons",
                            "server:delete-daemons": "Allow members to delete daemons",
                            "server:create-schedulers": "Allow members to create scheduled jobs",
                            "server:delete-schedulers": "Allow members to delete scheduled jobs",
                            "server:web-terminal": "Allow members to start web terminal sessions",
                            "site:create": "Allow members to create sites",
                            "site:delete": "Allow members to delete sites",
                            "site:meta": "Allow members to update site meta data such as domain name and aliases",
                            "site:manage-commands": "Allow members to run arbitrary commands from the site\u2018s root directory",
                            "site:manage-deploys": "Allow members to deploy the site and update the deployment script",
                            "site:manage-nginx": "Allow members to manage the site\u2018s Nginx configuration file",
                            "site:manage-project": "Allow members to install Git repositories, phpMyAdmin and WordPress applications",
                            "site:manage-environment": "Allow members to update the site\u2018s environment file",
                            "site:manage-notifications": "Allow members to configure deployment notifications",
                            "site:manage-queues": "Allow members to configure queue workers",
                            "site:manage-redirects": "Allow members to configure URL redirects",
                            "site:manage-security": "Allow members to configure HTTP Basic Authentication",
                            "site:manage-ssl": "Allow members to configure SSL and Let\u2018s Encrypt certificates",
                            "site:manage-integrations": "Allow members to manage site integrations",
                            "site:manage-heartbeats": "Allow members to manage heartbeats",
                            "credential:view": "Allow members to view credentials",
                            "credential:manage": "Allow members to manage credentials",
                            "team:view": "Allow members to view teams",
                            "team:create": "Allow members to create teams",
                            "team:delete": "Allow members to delete teams and team members",
                            "recipe:view": "Allow members to view recipes",
                            "recipe:manage": "Allow members to manage recipes",
                            "billing:manage": "Allow members to manage the organization's subscription",
                            "integrations:manage": "Allow members to manage the organization's integrations",
                            "user:view": "Allow members to view user details"
                        }
                    }
                }
            }
        },
        "schemas": {
            "AppStatus": {
                "type": "string",
                "enum": [
                    "installed",
                    "installing",
                    "removing"
                ],
                "title": "AppStatus"
            },
            "AppType": {
                "type": "string",
                "enum": [
                    "Statamic",
                    "WordPress",
                    "phpMyAdmin",
                    "Laravel",
                    "Symfony",
                    "PHP",
                    "Next.js",
                    "Nuxt.js",
                    "Static HTML",
                    "Custom",
                    "Craft",
                    "Minecraft"
                ],
                "title": "AppType"
            },
            "ApplicationLogResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "applicationLogs"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "type": "string",
                                "description": "The content of the log."
                            }
                        },
                        "required": [
                            "content"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "ApplicationLogResource"
            },
            "ArchiveRequest": {
                "type": "object",
                "properties": {
                    "server_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "server_id"
                ],
                "title": "ArchiveRequest"
            },
            "BackgroundProcessAction": {
                "type": "string",
                "description": "| |\n|---|\n| `restart` <br\/> Restart the background process |\n| `stop` <br\/> Stop the background process |\n| `start` <br\/> Start the background process |\n| `empty-log` <br\/> Empty the background process log |",
                "enum": [
                    "restart",
                    "stop",
                    "start",
                    "empty-log"
                ],
                "title": "BackgroundProcessAction"
            },
            "BackgroundProcessActionRequest": {
                "type": "object",
                "properties": {
                    "action": {
                        "description": "The action to perform on the background process.\n| |\n|---|\n| `restart` <br\/> Restart the background process |\n| `stop` <br\/> Stop the background process |\n| `start` <br\/> Start the background process |\n| `empty-log` <br\/> Empty the background process log |",
                        "example": "restart",
                        "$ref": "#\/components\/schemas\/BackgroundProcessAction"
                    }
                },
                "required": [
                    "action"
                ],
                "title": "BackgroundProcessActionRequest"
            },
            "BackgroundProcessLogResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "backgroundProcessLogs"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "type": "string",
                                "description": "The content of the log."
                            }
                        },
                        "required": [
                            "content"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "BackgroundProcessLogResource"
            },
            "BackgroundProcessResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "backgroundProcesses"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "command": {
                                "type": "string",
                                "description": "The command that the background process is running.",
                                "examples": [
                                    "php artisan queue:work database"
                                ]
                            },
                            "user": {
                                "type": "string",
                                "description": "The user that the background process is running as.",
                                "examples": [
                                    "forge"
                                ]
                            },
                            "directory": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "description": "The directory that the background process is running in.",
                                "examples": [
                                    "\/home\/forge\/forge.laravel.com"
                                ]
                            },
                            "processes": {
                                "type": "integer",
                                "description": "The number of processes that the background process is running.",
                                "examples": [
                                    3
                                ]
                            },
                            "status": {
                                "type": "string",
                                "description": "The status of the background process.",
                                "enum": [
                                    "installing",
                                    "installed",
                                    "removing",
                                    "restarting",
                                    "starting",
                                    "stopping"
                                ],
                                "examples": [
                                    "running"
                                ]
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the background process was created.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            }
                        },
                        "required": [
                            "command",
                            "user",
                            "directory",
                            "processes",
                            "status",
                            "created_at"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type"
                ],
                "title": "BackgroundProcessResource"
            },
            "BackgroundProcessResourceIdentifier": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "backgroundProcesses"
                        ]
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "id"
                ],
                "title": "BackgroundProcessResourceIdentifier"
            },
            "CertificateKeyType": {
                "type": "string",
                "enum": [
                    "ecdsa",
                    "rsa"
                ],
                "title": "CertificateKeyType"
            },
            "CertificateRequestStatus": {
                "type": "string",
                "enum": [
                    "verifying",
                    "creating",
                    "created"
                ],
                "title": "CertificateRequestStatus"
            },
            "CertificateResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "certificates"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "The type of certificate.",
                                "examples": [
                                    "letsencrypt"
                                ],
                                "$ref": "#\/components\/schemas\/CertificateType"
                            },
                            "verification_method": {
                                "anyOf": [
                                    {
                                        "description": "The verification method for Let's Encrypt certificates.",
                                        "examples": [
                                            "http-01"
                                        ],
                                        "$ref": "#\/components\/schemas\/CertificateVerificationMethod"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ]
                            },
                            "key_type": {
                                "anyOf": [
                                    {
                                        "description": "The key type for Let's Encrypt certificates.",
                                        "examples": [
                                            "ecdsa"
                                        ],
                                        "$ref": "#\/components\/schemas\/CertificateKeyType"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ]
                            },
                            "preferred_chain": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "description": "The preferred chain for Let's Encrypt certificates.",
                                "enum": [
                                    "ISRG Root X1"
                                ],
                                "examples": [
                                    "ISRG Root X1"
                                ]
                            },
                            "request_status": {
                                "description": "The certificate request status.",
                                "examples": [
                                    "'creating'"
                                ],
                                "$ref": "#\/components\/schemas\/CertificateRequestStatus"
                            },
                            "status": {
                                "description": "The status of the certificate.",
                                "examples": [
                                    "'installed'"
                                ],
                                "$ref": "#\/components\/schemas\/ResourceState"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the certificate was created.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the certificate was last updated.",
                                "examples": [
                                    "2025-07-30T09:00:00Z"
                                ]
                            }
                        },
                        "required": [
                            "type",
                            "verification_method",
                            "key_type",
                            "preferred_chain",
                            "request_status",
                            "status",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "CertificateResource"
            },
            "CertificateType": {
                "type": "string",
                "enum": [
                    "letsencrypt",
                    "csr",
                    "existing"
                ],
                "title": "CertificateType"
            },
            "CertificateVerificationMethod": {
                "type": "string",
                "enum": [
                    "http-01",
                    "dns-01"
                ],
                "title": "CertificateVerificationMethod"
            },
            "CommandResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "commands"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "command": {
                                "type": "string",
                                "description": "The command that ran.",
                                "examples": [
                                    "nvm use 22"
                                ]
                            },
                            "status": {
                                "description": "The status of the command.",
                                "examples": [
                                    "finished"
                                ],
                                "$ref": "#\/components\/schemas\/CommandStatus"
                            },
                            "duration": {
                                "type": "string",
                                "description": "The duration of the command in human-readable format.",
                                "examples": [
                                    "5m"
                                ]
                            },
                            "user_id": {
                                "type": "integer",
                                "description": "The ID of the user who initiated the command.",
                                "examples": [
                                    1
                                ]
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the command was created.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the command was last updated.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            }
                        },
                        "required": [
                            "command",
                            "status",
                            "duration",
                            "user_id",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "user": {
                                "type": "object",
                                "description": "The user who initiated the command.",
                                "properties": {
                                    "data": {
                                        "anyOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/UserResourceIdentifier"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "CommandResource"
            },
            "CommandStatus": {
                "type": "string",
                "enum": [
                    "waiting",
                    "running",
                    "finished",
                    "timeout",
                    "failed"
                ],
                "title": "CommandStatus"
            },
            "ComposerCredentialResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "repository": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            },
                            "password": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "repository",
                            "username",
                            "password"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "ComposerCredentialResource"
            },
            "ConnectionStatus": {
                "type": "string",
                "enum": [
                    "connecting",
                    "successful",
                    "failed"
                ],
                "title": "ConnectionStatus"
            },
            "CreateBackgroundProcessRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the background process.",
                        "example": "Custom command runner"
                    },
                    "command": {
                        "type": "string",
                        "description": "The command to run.",
                        "example": "php artisan custom:command"
                    },
                    "user": {
                        "type": "string",
                        "description": "The user to run the background process as.",
                        "enum": [
                            "root",
                            "forge"
                        ],
                        "example": "forge"
                    },
                    "directory": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The directory to run the background process from.",
                        "example": "\/home\/forge\/my-site.com\/current\/"
                    },
                    "processes": {
                        "type": "integer",
                        "description": "The number of processes to run.",
                        "example": 1,
                        "minimum": 1
                    },
                    "startsecs": {
                        "type": "integer",
                        "description": "The number of seconds to wait before starting the process.",
                        "example": 10,
                        "minimum": 0
                    },
                    "stopwaitsecs": {
                        "type": "integer",
                        "description": "The number of seconds to wait before stopping the process.",
                        "example": 10,
                        "minimum": 0
                    },
                    "stopsignal": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The signal to send to stop the process.",
                        "example": "SIGTERM"
                    }
                },
                "required": [
                    "name",
                    "command",
                    "user",
                    "processes"
                ],
                "title": "CreateBackgroundProcessRequest"
            },
            "CreateComposerCredentialRequest": {
                "type": "object",
                "properties": {
                    "repository": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "repository",
                    "username",
                    "password"
                ],
                "title": "CreateComposerCredentialRequest"
            },
            "CreateDatabaseRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the database to create.",
                        "example": "forge",
                        "maxLength": 63
                    },
                    "user": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The name of the database user to create. Only needed if a new user should be created alongside the database.",
                        "example": "james"
                    },
                    "password": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The password for the database user. Only used if the user is provided.",
                        "example": "password",
                        "maxLength": 255
                    }
                },
                "required": [
                    "name"
                ],
                "title": "CreateDatabaseRequest"
            },
            "CreateDatabaseUserRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the database user to create.",
                        "example": "james"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password for the database user.",
                        "example": "password",
                        "maxLength": 255
                    },
                    "read_only": {
                        "type": "boolean",
                        "description": "Whether the user should have read-only access to the databases.",
                        "example": true
                    },
                    "database_ids": {
                        "type": "array",
                        "description": "The IDs of the databases to assign the user to.",
                        "example": [
                            1,
                            2,
                            3
                        ],
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "name",
                    "password"
                ],
                "title": "CreateDatabaseUserRequest"
            },
            "CreateDeploymentWebhookRequest": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "url"
                ],
                "title": "CreateDeploymentWebhookRequest"
            },
            "CreateDomainCertificateRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "description": "The type of certificate to create.",
                        "example": "letsencrypt",
                        "$ref": "#\/components\/schemas\/CertificateType"
                    },
                    "letsencrypt": {
                        "type": "object",
                        "description": "The configuration for a Let's Encrypt certificate.",
                        "properties": {
                            "verification_method": {
                                "description": "The verification method to use for the Let's Encrypt certificate.",
                                "example": "dns-01",
                                "$ref": "#\/components\/schemas\/CertificateVerificationMethod"
                            },
                            "key_type": {
                                "description": "The type of key to use for the Let's Encrypt certificate.",
                                "example": "ecdsa",
                                "$ref": "#\/components\/schemas\/CertificateKeyType"
                            },
                            "preferred_chain": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "description": "The preferred chain for the Let's Encrypt certificate.",
                                "enum": [
                                    "ISRG Root X1"
                                ],
                                "example": "ISRG Root X1"
                            }
                        }
                    },
                    "existing": {
                        "type": "object",
                        "description": "The configuration for an existing certificate.",
                        "properties": {
                            "key": {
                                "type": "string",
                                "description": "The private key for an existing certificate."
                            },
                            "certificate": {
                                "type": "string",
                                "description": "The certificate chain for an existing certificate."
                            }
                        }
                    },
                    "csr": {
                        "type": "object",
                        "description": "The configuration for a CSR (Certificate Signing Request).",
                        "properties": {
                            "domain": {
                                "type": "string",
                                "description": "The domain to generate a CSR for."
                            },
                            "sans": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "description": "The SANs for the CSR, comma-separated."
                            },
                            "country": {
                                "type": "string",
                                "description": "The country for the CSR."
                            },
                            "state": {
                                "type": "string",
                                "description": "The state for the CSR."
                            },
                            "city": {
                                "type": "string",
                                "description": "The city for the CSR."
                            },
                            "organization": {
                                "type": "string",
                                "description": "The organization for the CSR."
                            },
                            "department": {
                                "type": "string",
                                "description": "The department for the CSR."
                            }
                        }
                    }
                },
                "required": [
                    "type"
                ],
                "title": "CreateDomainCertificateRequest"
            },
            "CreateDomainRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the domain.",
                        "example": "laravel.com"
                    },
                    "allow_wildcard_subdomains": {
                        "type": "boolean",
                        "description": "Whether to allow wildcard subdomains for the domain.",
                        "example": false
                    },
                    "www_redirect_type": {
                        "description": "The type of `www` redirection to apply to the domain.",
                        "example": "from-www",
                        "$ref": "#\/components\/schemas\/WwwRedirectType"
                    }
                },
                "required": [
                    "name",
                    "allow_wildcard_subdomains",
                    "www_redirect_type"
                ],
                "title": "CreateDomainRequest"
            },
            "CreateFirewallRuleRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "port": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "type": {
                        "$ref": "#\/components\/schemas\/RuleType"
                    },
                    "ip_address": {
                        "type": "object"
                    }
                },
                "required": [
                    "name",
                    "type"
                ],
                "title": "CreateFirewallRuleRequest"
            },
            "CreateHeartbeatRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the heartbeat.",
                        "example": "My Heartbeat",
                        "maxLength": 255
                    },
                    "grace_period": {
                        "description": "The duration (in minutes) after which a heartbeat is considered missing.",
                        "example": 2,
                        "$ref": "#\/components\/schemas\/HeartbeatGracePeriod"
                    },
                    "frequency": {
                        "description": "The interval (in minutes) at which the client is expected to send a ping.",
                        "example": 1,
                        "$ref": "#\/components\/schemas\/HeartbeatFrequency"
                    },
                    "custom_frequency": {
                        "type": "string",
                        "description": "A cron expression representing the custom frequency at which the client is expected to send a ping, if the frequency is set to -1.",
                        "example": "* * * * *"
                    }
                },
                "required": [
                    "name",
                    "grace_period",
                    "frequency"
                ],
                "title": "CreateHeartbeatRequest"
            },
            "CreateMonitorRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "description": "The type of the monitor.",
                        "example": "cpu_load",
                        "$ref": "#\/components\/schemas\/MonitorMetricType"
                    },
                    "operator": {
                        "description": "The operator used against the threshold.",
                        "example": "gte",
                        "$ref": "#\/components\/schemas\/MonitorOperator"
                    },
                    "threshold": {
                        "type": "number",
                        "description": "The threshold to alert on once breached.",
                        "example": 90
                    },
                    "minutes": {
                        "type": "integer",
                        "description": "The frequency in minutes to evaluate the monitor.",
                        "example": 1,
                        "minimum": 1,
                        "maximum": 60
                    },
                    "notify": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address to notify when the monitor is in an alert state.",
                        "example": "taylor@laravel.com"
                    }
                },
                "required": [
                    "type",
                    "operator",
                    "threshold",
                    "notify"
                ],
                "title": "CreateMonitorRequest"
            },
            "CreateNginxTemplateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Nginx template."
                    },
                    "content": {
                        "type": "string",
                        "description": "The content of the Nginx template."
                    }
                },
                "required": [
                    "name",
                    "content"
                ],
                "title": "CreateNginxTemplateRequest"
            },
            "CreatePhpVersionRequest": {
                "type": "object",
                "properties": {
                    "version": {
                        "$ref": "#\/components\/schemas\/PhpVersion"
                    },
                    "cli_default": {
                        "type": "boolean"
                    },
                    "site_default": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "version"
                ],
                "title": "CreatePhpVersionRequest"
            },
            "CreateRecipeRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "user": {
                        "type": "string",
                        "enum": [
                            "root",
                            "forge"
                        ]
                    },
                    "script": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "user",
                    "script"
                ],
                "title": "CreateRecipeRequest"
            },
            "CreateRedirectRequest": {
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "description": "The source URL path for the redirect rule.",
                        "example": "\/old-path",
                        "maxLength": 1000
                    },
                    "to": {
                        "type": "string",
                        "description": "The destination URL path for the redirect rule.",
                        "example": "\/new-path",
                        "maxLength": 1000
                    },
                    "type": {
                        "description": "The type of the redirect rule.",
                        "example": "permanent",
                        "$ref": "#\/components\/schemas\/RedirectRuleType"
                    }
                },
                "required": [
                    "from",
                    "to",
                    "type"
                ],
                "title": "CreateRedirectRequest"
            },
            "CreateRoleRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Permission"
                        }
                    }
                },
                "required": [
                    "name"
                ],
                "title": "CreateRoleRequest"
            },
            "CreateScheduledJobRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The name of the command.",
                        "example": "My scheduled job"
                    },
                    "command": {
                        "type": "string",
                        "description": "The command to run.",
                        "example": "echo $(whoami)"
                    },
                    "user": {
                        "type": "string",
                        "description": "The user to run the scheduled job as.",
                        "example": "root"
                    },
                    "frequency": {
                        "description": "The frequency of the scheduled job.",
                        "example": "hourly",
                        "$ref": "#\/components\/schemas\/CronFrequency"
                    },
                    "cron": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The cron expression to use for the scheduled job. Only used if frequency is set to Custom.",
                        "example": "0 * * * *"
                    },
                    "heartbeat": {
                        "type": [
                            "boolean",
                            "null"
                        ],
                        "description": "Whether a heartbeat should be created for the scheduled job.",
                        "example": true
                    },
                    "grace_period": {
                        "type": "string",
                        "description": "The grace period, in minutes, for the heartbeat.",
                        "example": "5"
                    }
                },
                "required": [
                    "command",
                    "user",
                    "frequency"
                ],
                "title": "CreateScheduledJobRequest"
            },
            "CreateSecurityRuleRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the security rule.",
                        "example": "Restricted Access",
                        "maxLength": 255
                    },
                    "path": {
                        "type": "string",
                        "description": "The path for the security rule.",
                        "example": "\/admin",
                        "maxLength": 255
                    },
                    "credentials": {
                        "type": "array",
                        "description": "The credentials for the security rule.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "description": "The usernames for the credential.",
                                    "example": "admin",
                                    "maxLength": 50
                                },
                                "password": {
                                    "type": "string",
                                    "description": "The passwords for the credential.",
                                    "example": "secret123"
                                }
                            },
                            "required": [
                                "username",
                                "password"
                            ]
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "name",
                    "credentials"
                ],
                "title": "CreateSecurityRuleRequest"
            },
            "CreateServerProviderNetworkRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "name"
                ],
                "title": "CreateServerProviderNetworkRequest"
            },
            "CreateServerRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "provider": {
                        "type": "string"
                    },
                    "credential_id": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "type": {
                        "$ref": "#\/components\/schemas\/ServerType"
                    },
                    "ubuntu_version": {
                        "type": "string",
                        "enum": [
                            "22.04",
                            "24.04"
                        ]
                    },
                    "php_version": {
                        "type": "string"
                    },
                    "database_type": {
                        "type": "string"
                    },
                    "recipe_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "tags": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "aws": {
                        "type": "object",
                        "properties": {
                            "region_id": {
                                "type": "string"
                            },
                            "size_id": {
                                "type": "string"
                            },
                            "vpc_uuid": {
                                "type": "string"
                            },
                            "subnet_uuid": {
                                "type": "string"
                            },
                            "disk_size": {
                                "type": "string"
                            }
                        }
                    },
                    "ocean2": {
                        "type": "object",
                        "properties": {
                            "region_id": {
                                "type": "string"
                            },
                            "size_id": {
                                "type": "string"
                            },
                            "vpc_uuid": {
                                "type": "string"
                            },
                            "enable_weekly_backups": {
                                "type": "string"
                            }
                        }
                    },
                    "hetzner": {
                        "type": "object",
                        "properties": {
                            "region_id": {
                                "type": "string"
                            },
                            "size_id": {
                                "type": "string"
                            },
                            "network_id": {
                                "type": "string"
                            },
                            "enable_daily_backups": {
                                "type": "string"
                            }
                        }
                    },
                    "vultr": {
                        "type": "object",
                        "properties": {
                            "region_id": {
                                "type": "string"
                            },
                            "size_id": {
                                "type": "string"
                            },
                            "network_id": {
                                "type": "string"
                            }
                        }
                    },
                    "akamai": {
                        "type": "object",
                        "properties": {
                            "region_id": {
                                "type": "string"
                            },
                            "size_id": {
                                "type": "string"
                            }
                        }
                    },
                    "laravel": {
                        "type": "object",
                        "properties": {
                            "region_id": {
                                "type": "string"
                            },
                            "size_id": {
                                "type": "string"
                            }
                        }
                    },
                    "custom": {
                        "type": "object",
                        "properties": {
                            "ip_address": {
                                "type": "string"
                            },
                            "private_ip_address": {
                                "type": "string"
                            },
                            "ssh_port": {
                                "type": "string"
                            },
                            "behind_nat": {
                                "type": "string"
                            },
                            "nat_ssh_port": {
                                "type": "string"
                            }
                        }
                    }
                },
                "required": [
                    "name",
                    "provider",
                    "type",
                    "ubuntu_version"
                ],
                "title": "CreateServerRequest"
            },
            "CreateSiteDomainMode": {
                "type": "string",
                "enum": [
                    "on-forge",
                    "custom"
                ],
                "title": "CreateSiteDomainMode"
            },
            "CreateSiteRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#\/components\/schemas\/SiteType"
                    },
                    "domain_mode": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#\/components\/schemas\/CreateSiteDomainMode"
                            }
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "www_redirect_type": {
                        "type": "string"
                    },
                    "allow_wildcard_subdomains": {
                        "type": "string"
                    },
                    "web_directory": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "is_isolated": {
                        "type": "boolean"
                    },
                    "isolated_user": {
                        "type": "string"
                    },
                    "php_version": {
                        "$ref": "#\/components\/schemas\/PhpVersion"
                    },
                    "zero_downtime_deployments": {
                        "type": "boolean"
                    },
                    "nginx_template_id": {
                        "type": "integer"
                    },
                    "source_control_provider": {
                        "$ref": "#\/components\/schemas\/SourceControlProvider"
                    },
                    "repository": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "branch": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "database_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "database_user_id": {
                        "type": "string"
                    },
                    "statamic_setup": {
                        "type": "string",
                        "description": "The type of setup for Statmic apps."
                    },
                    "statamic_starter_kit": {
                        "type": "string",
                        "description": "The starter kit for the Statamic app."
                    },
                    "statamic_super_user_email": {
                        "type": "string"
                    },
                    "statamic_super_user_password": {
                        "type": "string"
                    },
                    "install_composer_dependencies": {
                        "type": "boolean"
                    },
                    "generate_deploy_key": {
                        "type": "boolean"
                    },
                    "public_deploy_key": {
                        "type": "string"
                    },
                    "private_deploy_key": {
                        "type": "string"
                    },
                    "nuxt_next_mode": {
                        "type": "string",
                        "description": "The render mode for Next\/Nuxt applications."
                    },
                    "nuxt_next_build_command": {
                        "type": "string",
                        "description": "The build command for Next\/Nuxt applications."
                    },
                    "nuxt_next_port": {
                        "type": "integer",
                        "description": "The port used for Next\/Nuxt applications."
                    },
                    "push_to_deploy": {
                        "type": "boolean",
                        "description": "Automatically trigger a new deployment when changes are pushed to the environment's Git branch.",
                        "default": false
                    },
                    "tags": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "shared_paths": {
                        "type": "array",
                        "description": "A list of files or directories to be shared between releases for zero-downtime deployments.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "from": {
                                    "type": "string",
                                    "description": "The path relative to the project's root directory on the server that should be shared between releases."
                                },
                                "to": {
                                    "type": "string",
                                    "description": "The path relative to the deployment's release directory that the shared path should be linked to."
                                }
                            },
                            "required": [
                                "from",
                                "to"
                            ]
                        }
                    }
                },
                "required": [
                    "type"
                ],
                "title": "CreateSiteRequest"
            },
            "CreateSshKeyRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the SSH key.",
                        "example": "oliver-macbook"
                    },
                    "key": {
                        "type": "string",
                        "description": "The public SSH key.",
                        "example": "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5A... user@example.com"
                    },
                    "user": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The user associated with the SSH key.",
                        "example": "username",
                        "default": "forge"
                    }
                },
                "required": [
                    "name",
                    "key"
                ],
                "title": "CreateSshKeyRequest"
            },
            "CreateTeamInviteRequest": {
                "type": "object",
                "properties": {
                    "role_id": {
                        "type": "integer"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "required": [
                    "role_id",
                    "email"
                ],
                "title": "CreateTeamInviteRequest"
            },
            "CreateTeamRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "role": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ]
                                }
                            },
                            "required": [
                                "id"
                            ]
                        }
                    },
                    "invites": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "format": "email"
                                },
                                "role": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ]
                                }
                            },
                            "required": [
                                "email"
                            ]
                        }
                    }
                },
                "required": [
                    "name"
                ],
                "title": "CreateTeamRequest"
            },
            "CronFrequency": {
                "type": "string",
                "enum": [
                    "minutely",
                    "hourly",
                    "nightly",
                    "weekly",
                    "monthly",
                    "reboot",
                    "custom"
                ],
                "title": "CronFrequency"
            },
            "CustomRoleResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "customRoles"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "name",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "permissions": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#\/components\/schemas\/PermissionResourceIdentifier"
                                        }
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "CustomRoleResource"
            },
            "DatabaseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "databases"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The name of the database schema.",
                                "examples": [
                                    "forge"
                                ]
                            },
                            "status": {
                                "type": "string",
                                "description": "The status of the database schema.",
                                "examples": [
                                    "installed"
                                ]
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the database schema was created.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the database schema was last updated.",
                                "examples": [
                                    "2025-07-30T09:00:00Z"
                                ]
                            }
                        },
                        "required": [
                            "name",
                            "status",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "DatabaseResource"
            },
            "DatabaseUserResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "databaseUsers"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The name of the database user.",
                                "examples": [
                                    "forge"
                                ]
                            },
                            "status": {
                                "type": "string",
                                "description": "The status of the database user.",
                                "enum": [
                                    "installed",
                                    "updating",
                                    "installing",
                                    "removing"
                                ],
                                "examples": [
                                    "installed"
                                ]
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the database user was created.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the database user was last updated.",
                                "examples": [
                                    "2025-07-30T09:00:00Z"
                                ]
                            }
                        },
                        "required": [
                            "name",
                            "status",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "DatabaseUserResource"
            },
            "DeployHookResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "deploymentHooks"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string",
                                "description": "The URL to use for the deployment hook."
                            }
                        },
                        "required": [
                            "url"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "DeployHookResource"
            },
            "DeploymentOutputResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "deploymentOutputs"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "output": {
                                "type": "string",
                                "description": "The output of the deployment."
                            }
                        },
                        "required": [
                            "output"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "DeploymentOutputResource"
            },
            "DeploymentResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "deployments"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "commit": {
                                "type": "object",
                                "description": "The commit information for the deployment.",
                                "properties": {
                                    "hash": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "The commit hash."
                                    },
                                    "author": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "The commit author."
                                    },
                                    "message": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "The commit message."
                                    },
                                    "branch": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "The commit branch."
                                    }
                                },
                                "required": [
                                    "hash",
                                    "author",
                                    "message",
                                    "branch"
                                ]
                            },
                            "type": {
                                "type": "string"
                            },
                            "status": {
                                "$ref": "#\/components\/schemas\/DeploymentStatus"
                            },
                            "started_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the deployment started.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            },
                            "ended_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the deployment ended.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the deployment was created.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the deployment was last updated.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            }
                        },
                        "required": [
                            "commit",
                            "type",
                            "status",
                            "started_at",
                            "ended_at",
                            "created_at",
                            "updated_at"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type"
                ],
                "title": "DeploymentResource"
            },
            "DeploymentResourceIdentifier": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "deployments"
                        ]
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "id"
                ],
                "title": "DeploymentResourceIdentifier"
            },
            "DeploymentScriptResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "deploymentScripts"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "description": "The content of the deployment script."
                            },
                            "auto_source": {
                                "type": "boolean",
                                "description": "Make .env variables available to deployment script"
                            }
                        },
                        "required": [
                            "content",
                            "auto_source"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "DeploymentScriptResource"
            },
            "DeploymentStatus": {
                "type": "string",
                "enum": [
                    "cancelled",
                    "deploying",
                    "failed",
                    "failed-build",
                    "finished",
                    "pending",
                    "queued"
                ],
                "title": "DeploymentStatus"
            },
            "DeploymentStatusResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "deploymentStatuses"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "anyOf": [
                                    {
                                        "$ref": "#\/components\/schemas\/DeploymentStatus"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ]
                            },
                            "started_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the deployment started.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            }
                        },
                        "required": [
                            "status",
                            "started_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "DeploymentStatusResource"
            },
            "DeploymentType": {
                "type": "integer",
                "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                "title": "DeploymentType"
            },
            "DeploymentWebhookResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "deploymentWebhooks"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string",
                                "description": "The URL of the deployment webhook."
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the deployment webhook was created.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the deployment webhook was last updated.",
                                "examples": [
                                    "2025-07-30T09:00:00Z"
                                ]
                            }
                        },
                        "required": [
                            "url",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "DeploymentWebhookResource"
            },
            "DomainActionRequest": {
                "type": "object",
                "properties": {
                    "action": {
                        "description": "The action to perform on the domain.",
                        "example": "'enable'",
                        "$ref": "#\/components\/schemas\/DomainRecordAction"
                    }
                },
                "required": [
                    "action"
                ],
                "title": "DomainActionRequest"
            },
            "DomainRecordAction": {
                "type": "string",
                "enum": [
                    "enable",
                    "disable",
                    "mark-as-primary"
                ],
                "title": "DomainRecordAction"
            },
            "DomainRecordConfigurationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "The type of DNS record.",
                                "enum": [
                                    "A",
                                    "CNAME",
                                    "TXT"
                                ],
                                "examples": [
                                    "A"
                                ]
                            },
                            "name": {
                                "type": "string",
                                "description": "The name of the DNS record.",
                                "examples": [
                                    "example.com"
                                ]
                            },
                            "value": {
                                "type": "string",
                                "description": "The value (IP address, CNAME target, TXT value) of the DNS record.",
                                "examples": [
                                    "192.168.0.1"
                                ]
                            },
                            "ttl": {
                                "type": [
                                    "integer",
                                    "null"
                                ],
                                "description": "The recommended TTL (Time to Live) for the DNS record, in seconds.",
                                "examples": [
                                    3600
                                ]
                            }
                        },
                        "required": [
                            "type",
                            "name",
                            "value",
                            "ttl"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type"
                ],
                "title": "DomainRecordConfigurationResource"
            },
            "DomainRecordResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "domainRecords"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The name of the domain.",
                                "examples": [
                                    "forge.laravel.com"
                                ]
                            },
                            "type": {
                                "type": "string",
                                "description": "The type of domain.",
                                "enum": [
                                    "primary",
                                    "alias"
                                ],
                                "examples": [
                                    "primary"
                                ]
                            },
                            "status": {
                                "description": "The status of the domain.",
                                "examples": [
                                    "enabled"
                                ],
                                "$ref": "#\/components\/schemas\/DomainRecordStatus"
                            },
                            "www_redirect_type": {
                                "description": "The type of `www.` redirection for the domain.",
                                "examples": [
                                    "from-www"
                                ],
                                "$ref": "#\/components\/schemas\/WwwRedirectType"
                            },
                            "allow_wildcard_subdomains": {
                                "type": "boolean",
                                "description": "Whether the domain allows wildcard subdomains.",
                                "examples": [
                                    true
                                ]
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the domain was created.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the domain was last updated.",
                                "examples": [
                                    "2025-07-30T09:00:00Z"
                                ]
                            }
                        },
                        "required": [
                            "name",
                            "type",
                            "status",
                            "www_redirect_type",
                            "allow_wildcard_subdomains",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "DomainRecordResource"
            },
            "DomainRecordStatus": {
                "type": "string",
                "enum": [
                    "pending",
                    "connecting",
                    "enabled",
                    "removing",
                    "securing",
                    "updating",
                    "disabling",
                    "disabled",
                    "enabling"
                ],
                "title": "DomainRecordStatus"
            },
            "DomainRecordType": {
                "type": "string",
                "enum": [
                    "primary",
                    "alias",
                    "www",
                    "reverb"
                ],
                "title": "DomainRecordType"
            },
            "EnableMaintenanceModeRequest": {
                "type": "object",
                "properties": {
                    "secret": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The secret phrase that allows access to the application while in maintenance mode.",
                        "example": "my-secret-phrase"
                    },
                    "status": {
                        "description": "The HTTP status code that should be returned while in maintenance mode.",
                        "example": 503,
                        "$ref": "#\/components\/schemas\/MaintenanceModeStatusCode"
                    },
                    "redirect": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The redirect URL to which all requests should be sent while in maintenance mode.",
                        "example": "https:\/\/example.com\/maintenance"
                    }
                },
                "required": [
                    "status"
                ],
                "title": "EnableMaintenanceModeRequest"
            },
            "EnableOctaneRequest": {
                "type": "object",
                "properties": {
                    "port": {
                        "type": "string"
                    },
                    "server": {
                        "$ref": "#\/components\/schemas\/OctaneServer"
                    }
                },
                "required": [
                    "port",
                    "server"
                ],
                "title": "EnableOctaneRequest"
            },
            "EnableReverbRequest": {
                "type": "object",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "port": {
                        "type": "string"
                    },
                    "connections": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 50000
                    }
                },
                "required": [
                    "host",
                    "port",
                    "connections"
                ],
                "title": "EnableReverbRequest"
            },
            "EnvironmentResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "environments"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "content"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "EnvironmentResource"
            },
            "EventOutputResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "eventOutputs"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "output": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "output"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "EventOutputResource"
            },
            "EventResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "events"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string",
                                "description": "The description of the event.",
                                "examples": [
                                    "Adding database"
                                ]
                            },
                            "ran_as": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "description": "The server user that the event was run as.",
                                "examples": [
                                    "forge"
                                ]
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the event was created.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the event was last updated.",
                                "examples": [
                                    "2025-07-30T09:00:00Z"
                                ]
                            }
                        },
                        "required": [
                            "description",
                            "ran_as",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "initiator": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "anyOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/UserResourceIdentifier"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "EventResource"
            },
            "ForgeRecipeResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "forgeRecipes"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "user": {
                                "type": "string"
                            },
                            "info": {
                                "type": "string"
                            },
                            "script": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "name",
                            "user",
                            "info",
                            "script",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "ForgeRecipeResource"
            },
            "HealthcheckEndpointResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "healthcheckEndpoints"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "healthcheck_endpoint": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        },
                        "required": [
                            "healthcheck_endpoint"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "HealthcheckEndpointResource"
            },
            "HealthcheckStatus": {
                "type": "string",
                "enum": [
                    "healthy",
                    "unhealthy",
                    "system_failure",
                    "cancelled"
                ],
                "title": "HealthcheckStatus"
            },
            "HeartbeatFrequency": {
                "type": "integer",
                "enum": [
                    1,
                    5,
                    10,
                    30,
                    60,
                    1440,
                    10080,
                    312480,
                    -1
                ],
                "title": "HeartbeatFrequency"
            },
            "HeartbeatGracePeriod": {
                "type": "integer",
                "enum": [
                    1,
                    2,
                    5,
                    10
                ],
                "title": "HeartbeatGracePeriod"
            },
            "HeartbeatResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "heartbeats"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The name of the heartbeat."
                            },
                            "status": {
                                "anyOf": [
                                    {
                                        "$ref": "#\/components\/schemas\/HeartbeatStatus"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ]
                            },
                            "grace_period": {
                                "$ref": "#\/components\/schemas\/HeartbeatGracePeriod"
                            },
                            "frequency": {
                                "$ref": "#\/components\/schemas\/HeartbeatFrequency"
                            },
                            "custom_frequency": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "ping_url": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        },
                        "required": [
                            "name",
                            "status",
                            "grace_period",
                            "frequency",
                            "custom_frequency",
                            "ping_url"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "HeartbeatResource"
            },
            "HeartbeatStatus": {
                "type": "string",
                "enum": [
                    "pending",
                    "beating",
                    "missing"
                ],
                "title": "HeartbeatStatus"
            },
            "HorizonIntegrationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "horizonIntegrations"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "string"
                            },
                            "horizon_installed": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "enabled",
                            "horizon_installed"
                        ]
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "backgroundProcess": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "anyOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/BackgroundProcessResourceIdentifier"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "HorizonIntegrationResource"
            },
            "InertiaIntegrationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "inertiaIntegrations"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "string"
                            },
                            "inertia_installed": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "enabled",
                            "inertia_installed"
                        ]
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "backgroundProcess": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "anyOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/BackgroundProcessResourceIdentifier"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "InertiaIntegrationResource"
            },
            "JobOutputResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "scheduledJobOutputs"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "output": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "output"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "JobOutputResource"
            },
            "JobResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "scheduledJobs"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "command": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "user": {
                                "type": "string"
                            },
                            "frequency": {
                                "type": "string"
                            },
                            "cron": {
                                "type": "string"
                            },
                            "next_run_time": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "name",
                            "command",
                            "status",
                            "user",
                            "frequency",
                            "cron",
                            "next_run_time",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "JobResource"
            },
            "JobResourceIdentifier": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "scheduledJobs"
                        ]
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "id"
                ],
                "title": "JobResourceIdentifier"
            },
            "KeyResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "keys"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "user": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "created_by": {
                                "type": [
                                    "integer",
                                    "null"
                                ],
                                "description": "The user that created the key."
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date the key was created."
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date the key was last updated."
                            }
                        },
                        "required": [
                            "name",
                            "user",
                            "status",
                            "created_by",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "KeyResource"
            },
            "LaravelMaintenanceIntegrationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "laravelMaintenanceIntegrations"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "description": "Whether the maintenance mode integration is enabled."
                            },
                            "status": {
                                "anyOf": [
                                    {
                                        "description": "The status of the maintenance mode integration.",
                                        "examples": [
                                            "enabling"
                                        ],
                                        "$ref": "#\/components\/schemas\/MaintenanceModeStatus"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ]
                            },
                            "laravel_installed": {
                                "type": "boolean",
                                "description": "Whether Laravel is installed on the site."
                            }
                        },
                        "required": [
                            "enabled",
                            "status",
                            "laravel_installed"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "LaravelMaintenanceIntegrationResource"
            },
            "LaravelSchedulerIntegrationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "laravelSchedulerIntegrations"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "boolean"
                            },
                            "laravel_installed": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "enabled",
                            "laravel_installed"
                        ]
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "job": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "anyOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/JobResourceIdentifier"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "LaravelSchedulerIntegrationResource"
            },
            "Link": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "format": "uri"
                    },
                    "rel": {
                        "type": "string"
                    },
                    "describedby": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "hreflang": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ]
                    },
                    "meta": {
                        "type": "object"
                    }
                },
                "required": [
                    "href"
                ],
                "title": "Link"
            },
            "LoadBalancingNodeResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "loadBalancingNodes"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "server_id": {
                                "type": "string"
                            },
                            "port": {
                                "type": "integer"
                            },
                            "weight": {
                                "type": "integer"
                            },
                            "backup": {
                                "type": "boolean"
                            },
                            "down": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "server_id",
                            "port",
                            "weight",
                            "backup",
                            "down"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type"
                ],
                "title": "LoadBalancingNodeResource"
            },
            "MaintenanceModeStatus": {
                "type": "string",
                "enum": [
                    "disabling",
                    "enabling"
                ],
                "title": "MaintenanceModeStatus"
            },
            "MaintenanceModeStatusCode": {
                "type": "integer",
                "enum": [
                    304,
                    307,
                    410,
                    503
                ],
                "title": "MaintenanceModeStatusCode"
            },
            "MembershipResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "memberships"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "name",
                            "email",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "role": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "anyOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/RoleResourceIdentifier"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "MembershipResource"
            },
            "MonitorMetricType": {
                "type": "string",
                "enum": [
                    "cpu_load",
                    "disk",
                    "free_memory",
                    "used_memory"
                ],
                "title": "MonitorMetricType"
            },
            "MonitorOperator": {
                "type": "string",
                "enum": [
                    "gte",
                    "lte"
                ],
                "title": "MonitorOperator"
            },
            "MonitorResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "monitors"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "The type of the monitor.",
                                "examples": [
                                    "cpu_load"
                                ],
                                "$ref": "#\/components\/schemas\/MonitorMetricType"
                            },
                            "operator": {
                                "description": "The operator used against the threshold.",
                                "examples": [
                                    "gte"
                                ],
                                "$ref": "#\/components\/schemas\/MonitorOperator"
                            },
                            "threshold": {
                                "type": "number",
                                "description": "The threshold to alert on once breached.",
                                "examples": [
                                    90
                                ]
                            },
                            "minutes": {
                                "type": [
                                    "integer",
                                    "null"
                                ],
                                "description": "The frequency in minutes to evaluate the monitor.",
                                "examples": [
                                    1
                                ]
                            },
                            "notify": {
                                "type": "string",
                                "description": "The email address to notify when the monitor is in an alert state.",
                                "examples": [
                                    "taylor@laravel.com"
                                ]
                            },
                            "status": {
                                "description": "The status of the monitor.",
                                "examples": [
                                    "installed"
                                ],
                                "$ref": "#\/components\/schemas\/ResourceState"
                            },
                            "state": {
                                "description": "The state of the monitor.",
                                "examples": [
                                    "OK"
                                ],
                                "$ref": "#\/components\/schemas\/MonitorState"
                            },
                            "state_changed_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time",
                                "description": "The date and time the monitor state was last changed.",
                                "examples": [
                                    "2025-07-30T09:00:00Z"
                                ]
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the monitor was created.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the monitor was last updated.",
                                "examples": [
                                    "2025-07-30T09:00:00Z"
                                ]
                            }
                        },
                        "required": [
                            "type",
                            "operator",
                            "threshold",
                            "minutes",
                            "notify",
                            "status",
                            "state",
                            "state_changed_at",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "MonitorResource"
            },
            "MonitorState": {
                "type": "string",
                "enum": [
                    "OK",
                    "ALERT",
                    "UNKNOWN"
                ],
                "title": "MonitorState"
            },
            "MysqlAction": {
                "type": "string",
                "description": "| |\n|---|\n| `reboot` <br\/> Reboot the MySQL service |\n| `stop` <br\/> Stop the MySQL service |",
                "enum": [
                    "reboot",
                    "stop"
                ],
                "title": "MysqlAction"
            },
            "MysqlServiceActionRequest": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#\/components\/schemas\/MysqlAction"
                    }
                },
                "required": [
                    "action"
                ],
                "title": "MysqlServiceActionRequest"
            },
            "NginxAccessLogResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "nginxAccessLogs"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "content"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "NginxAccessLogResource"
            },
            "NginxAction": {
                "type": "string",
                "description": "| |\n|---|\n| `reboot` <br\/> Reboot the Nginx service |\n| `stop` <br\/> Stop the Nginx service |",
                "enum": [
                    "reboot",
                    "stop"
                ],
                "title": "NginxAction"
            },
            "NginxConfigResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "nginxConfigs"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "content"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "NginxConfigResource"
            },
            "NginxErrorLogResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "nginxErrorLogs"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "content"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "NginxErrorLogResource"
            },
            "NginxMode": {
                "type": "string",
                "enum": [
                    "legacy",
                    "split"
                ],
                "title": "NginxMode"
            },
            "NginxServiceActionRequest": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#\/components\/schemas\/NginxAction"
                    }
                },
                "required": [
                    "action"
                ],
                "title": "NginxServiceActionRequest"
            },
            "NginxTemplateResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "nginxTemplates"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "name",
                            "content",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "NginxTemplateResource"
            },
            "NodeBalancerMethod": {
                "type": "string",
                "enum": [
                    "round_robin",
                    "least_conn",
                    "ip_hash"
                ],
                "title": "NodeBalancerMethod"
            },
            "OctaneIntegrationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "octaneIntegrations"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "string"
                            },
                            "octane_installed": {
                                "type": "boolean"
                            },
                            "port": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            }
                        },
                        "required": [
                            "enabled",
                            "octane_installed",
                            "port"
                        ]
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "backgroundProcess": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "anyOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/BackgroundProcessResourceIdentifier"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "OctaneIntegrationResource"
            },
            "OctaneServer": {
                "type": "string",
                "enum": [
                    "swoole",
                    "roadrunner",
                    "frankenphp"
                ],
                "title": "OctaneServer"
            },
            "OrganizationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "organizations"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "slug": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "name",
                            "slug",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "OrganizationResource"
            },
            "OrganizationResourceIdentifier": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "organizations"
                        ]
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "id"
                ],
                "title": "OrganizationResourceIdentifier"
            },
            "Permission": {
                "type": "string",
                "enum": [
                    "organization:view",
                    "organization:manage",
                    "organization:delete",
                    "server:view",
                    "server:create",
                    "server:delete",
                    "server:archive",
                    "server:transfer",
                    "server:manage-meta",
                    "server:manage-packages",
                    "server:manage-php",
                    "server:manage-logs",
                    "server:manage-network",
                    "server:manage-nginx-templates",
                    "server:manage-services",
                    "server:create-keys",
                    "server:delete-keys",
                    "server:create-monitors",
                    "server:delete-monitors",
                    "server:create-databases",
                    "server:delete-databases",
                    "server:create-backups",
                    "server:delete-backups",
                    "server:create-daemons",
                    "server:delete-daemons",
                    "server:create-schedulers",
                    "server:delete-schedulers",
                    "server:web-terminal",
                    "site:create",
                    "site:delete",
                    "site:meta",
                    "site:manage-commands",
                    "site:manage-deploys",
                    "site:manage-nginx",
                    "site:manage-project",
                    "site:manage-environment",
                    "site:manage-notifications",
                    "site:manage-queues",
                    "site:manage-redirects",
                    "site:manage-security",
                    "site:manage-ssl",
                    "site:manage-integrations",
                    "site:manage-heartbeats",
                    "credential:view",
                    "credential:manage",
                    "team:view",
                    "team:create",
                    "team:delete",
                    "recipe:view",
                    "recipe:manage",
                    "billing:manage",
                    "integrations:manage",
                    "user:view"
                ],
                "title": "Permission"
            },
            "PermissionResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "permissions"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "name"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "PermissionResource"
            },
            "PermissionResourceIdentifier": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "permissions"
                        ]
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "id"
                ],
                "title": "PermissionResourceIdentifier"
            },
            "PhpAction": {
                "type": "string",
                "description": "| |\n|---|\n| `reboot` <br\/> Reboot PHP-FPM for a specific version |",
                "enum": [
                    "reboot"
                ],
                "title": "PhpAction"
            },
            "PhpCliConfigurationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "phpCliConfigurations"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "configuration": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "configuration"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "PhpCliConfigurationResource"
            },
            "PhpFpmConfigurationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "phpFpmConfigurations"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "configuration": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "configuration"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "PhpFpmConfigurationResource"
            },
            "PhpMaxExecutionTimeResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "phpMaxExecutionTimes"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "max_execution_time": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            }
                        },
                        "required": [
                            "max_execution_time"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "PhpMaxExecutionTimeResource"
            },
            "PhpMaxUploadSizeResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "phpMaxUploadSizes"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "max_upload_size": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            }
                        },
                        "required": [
                            "max_upload_size"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "PhpMaxUploadSizeResource"
            },
            "PhpOpcacheResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "phpOpcaches"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "opcache_enabled": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "opcache_enabled"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "PhpOpcacheResource"
            },
            "PhpPoolConfigurationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "phpPoolConfigurations"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "configuration": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "configuration"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "PhpPoolConfigurationResource"
            },
            "PhpServiceActionRequest": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#\/components\/schemas\/PhpAction"
                    },
                    "version": {
                        "$ref": "#\/components\/schemas\/PhpVersion"
                    }
                },
                "required": [
                    "action",
                    "version"
                ],
                "title": "PhpServiceActionRequest"
            },
            "PhpVersion": {
                "type": "string",
                "enum": [
                    "php5",
                    "php56-old",
                    "php56",
                    "php70",
                    "php71",
                    "php72",
                    "php73",
                    "php74",
                    "php80",
                    "php81",
                    "php82",
                    "php83",
                    "php84",
                    "php85"
                ],
                "title": "PhpVersion"
            },
            "PhpVersionResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "phpVersions"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "version": {
                                "type": "string",
                                "enum": [
                                    "5.6",
                                    "7.0",
                                    "7.1",
                                    "7.2",
                                    "7.3",
                                    "7.4",
                                    "8.0",
                                    "8.1",
                                    "8.2",
                                    "8.3",
                                    "8.4",
                                    "8.5",
                                    "5"
                                ]
                            },
                            "binary_name": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "version",
                            "binary_name",
                            "status",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "PhpVersionResource"
            },
            "PostgresAction": {
                "type": "string",
                "description": "| |\n|---|\n| `reboot` <br\/> Reboot the Postgres service |\n| `stop` <br\/> Stop the Postgres service |",
                "enum": [
                    "reboot",
                    "stop"
                ],
                "title": "PostgresAction"
            },
            "PostgresServiceActionRequest": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#\/components\/schemas\/PostgresAction"
                    }
                },
                "required": [
                    "action"
                ],
                "title": "PostgresServiceActionRequest"
            },
            "PredefinedRoleResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "predefinedRoles"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "name",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "permissions": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#\/components\/schemas\/PermissionResourceIdentifier"
                                        }
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "PredefinedRoleResource"
            },
            "ProviderRegionResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "providerRegions"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "code": {
                                "type": "string"
                            },
                            "alternate_code": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        },
                        "required": [
                            "name",
                            "code",
                            "alternate_code"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "ProviderRegionResource"
            },
            "ProviderRegionSizeResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "providerSizes"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "name"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "ProviderRegionSizeResource"
            },
            "ProviderResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "providers"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "slug": {
                                "type": "string"
                            },
                            "simple_name": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "currency": {
                                "type": "string"
                            },
                            "currency_symbol": {
                                "type": "string"
                            },
                            "default_size_code": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "default_region_code": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        },
                        "required": [
                            "name",
                            "slug",
                            "simple_name",
                            "currency",
                            "currency_symbol",
                            "default_size_code",
                            "default_region_code"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "ProviderResource"
            },
            "ProviderSizeResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "providerSizes"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The name of the size."
                            },
                            "code": {
                                "type": "string",
                                "description": "The code identifier from the provider."
                            },
                            "series": {
                                "type": "string",
                                "description": "The series type."
                            },
                            "category": {
                                "type": "string",
                                "description": "The category name"
                            },
                            "cpus": {
                                "type": "integer",
                                "description": "The number of CPUs."
                            },
                            "disk_type": {
                                "type": "string",
                                "description": "The type of disk."
                            },
                            "architecture": {
                                "type": "string",
                                "description": "The CPU architecture."
                            },
                            "ram": {
                                "type": "integer",
                                "description": "The amount of RAM in MB."
                            },
                            "disk": {
                                "type": "integer",
                                "description": "The amount of disk space in MB."
                            }
                        },
                        "required": [
                            "name",
                            "code",
                            "series",
                            "category",
                            "cpus",
                            "disk_type",
                            "architecture",
                            "ram",
                            "disk"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "ProviderSizeResource"
            },
            "ProvisioningStatus": {
                "type": "string",
                "enum": [
                    "waiting",
                    "building",
                    "provisioning",
                    "finished",
                    "app"
                ],
                "title": "ProvisioningStatus"
            },
            "ProvisioningStep": {
                "type": "integer",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    99
                ],
                "title": "ProvisioningStep"
            },
            "PulseIntegrationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "pulseIntegrations"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "string"
                            },
                            "pulse_installed": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "enabled",
                            "pulse_installed"
                        ]
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "backgroundProcess": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "anyOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/BackgroundProcessResourceIdentifier"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "PulseIntegrationResource"
            },
            "RecipeLogResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "recipeLogs"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "server_id": {
                                "type": "integer"
                            },
                            "executed_by": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            },
                            "recipe_id": {
                                "type": "integer"
                            },
                            "status": {
                                "$ref": "#\/components\/schemas\/RecipeStatus"
                            },
                            "output": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "started_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            },
                            "finished_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "server_id",
                            "executed_by",
                            "recipe_id",
                            "status",
                            "output",
                            "started_at",
                            "finished_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "RecipeLogResource"
            },
            "RecipeResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "recipes"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The name of the Recipe.",
                                "examples": [
                                    "Install Security tooling"
                                ]
                            },
                            "script": {
                                "type": "string",
                                "description": "The script that should be executed.",
                                "examples": [
                                    "apt-get install -y my-custom-tooling"
                                ]
                            },
                            "user": {
                                "type": "string",
                                "description": "The user that the Recipe should be executed as.",
                                "examples": [
                                    "root"
                                ]
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date the Recipe was created.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date the Recipe was last updated.",
                                "examples": [
                                    "2025-07-30T09:00:00Z"
                                ]
                            }
                        },
                        "required": [
                            "name",
                            "script",
                            "user",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "RecipeResource"
            },
            "RecipeStatus": {
                "type": "string",
                "enum": [
                    "waiting",
                    "running",
                    "finished",
                    "failed"
                ],
                "title": "RecipeStatus"
            },
            "RedirectRuleResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "redirect-rules"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "from": {
                                "type": "string",
                                "description": "The source URL path for the redirect rule.",
                                "examples": [
                                    "\/old-path"
                                ]
                            },
                            "to": {
                                "type": "string",
                                "description": "The destination URL path for the redirect rule.",
                                "examples": [
                                    "\/new-path"
                                ]
                            },
                            "type": {
                                "description": "The type of the redirect rule.",
                                "examples": [
                                    "permanent"
                                ],
                                "$ref": "#\/components\/schemas\/RedirectRuleType"
                            },
                            "status": {
                                "type": "string",
                                "description": "The status of the redirect rule.",
                                "enum": [
                                    "installing",
                                    "installed",
                                    "removing"
                                ],
                                "examples": [
                                    "installed"
                                ]
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the redirect rule was created.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the redirect rule was last updated.",
                                "examples": [
                                    "2025-07-30T09:00:00Z"
                                ]
                            }
                        },
                        "required": [
                            "from",
                            "to",
                            "type",
                            "status",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "RedirectRuleResource"
            },
            "RedirectRuleType": {
                "type": "string",
                "enum": [
                    "redirect",
                    "permanent"
                ],
                "title": "RedirectRuleType"
            },
            "RedisAction": {
                "type": "string",
                "description": "| |\n|---|\n| `reboot` <br\/> Reboot the Redis service |",
                "enum": [
                    "reboot"
                ],
                "title": "RedisAction"
            },
            "RedisServiceActionRequest": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#\/components\/schemas\/RedisAction"
                    }
                },
                "required": [
                    "action"
                ],
                "title": "RedisServiceActionRequest"
            },
            "RepositoryStatus": {
                "type": "string",
                "enum": [
                    "installed",
                    "installing",
                    "removing"
                ],
                "title": "RepositoryStatus"
            },
            "ResourceState": {
                "type": "string",
                "enum": [
                    "installing",
                    "installed",
                    "removing",
                    "restarting",
                    "stopping",
                    "stopped",
                    "starting",
                    "syncing",
                    "updating",
                    "disabling",
                    "disabled",
                    "enabling",
                    "running",
                    "restoring",
                    "deleting",
                    "failed",
                    "success",
                    "failed-unknown",
                    "failed-runner"
                ],
                "title": "ResourceState"
            },
            "ReverbIntegrationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "reverbIntegrations"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "string"
                            },
                            "reverb_installed": {
                                "type": "boolean"
                            },
                            "host": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "port": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            },
                            "connections": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            }
                        },
                        "required": [
                            "enabled",
                            "reverb_installed",
                            "host",
                            "port",
                            "connections"
                        ]
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "backgroundProcess": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "anyOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/BackgroundProcessResourceIdentifier"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "ReverbIntegrationResource"
            },
            "RoleResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "predefinedRoles"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "name",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "permissions": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#\/components\/schemas\/PermissionResourceIdentifier"
                                        }
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "RoleResource"
            },
            "RoleResourceIdentifier": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "predefinedRoles"
                        ]
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "id"
                ],
                "title": "RoleResourceIdentifier"
            },
            "RuleResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "rules"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The name of the firewall rule.",
                                "examples": [
                                    "Allow HTTP"
                                ]
                            },
                            "port": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "description": "The port or port range for the firewall rule.",
                                "examples": [
                                    "80"
                                ]
                            },
                            "type": {
                                "type": "string",
                                "description": "The type of the firewall rule.",
                                "examples": [
                                    "allow"
                                ]
                            },
                            "ip_address": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "description": "The IP address or subnet for the firewall rule.",
                                "examples": [
                                    "192.168.1.1"
                                ]
                            },
                            "status": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "description": "The status of the firewall rule.",
                                "examples": [
                                    "installed"
                                ]
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the firewall rule was created.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the firewall rule was last updated.",
                                "examples": [
                                    "2025-07-30T09:00:00Z"
                                ]
                            }
                        },
                        "required": [
                            "name",
                            "port",
                            "type",
                            "ip_address",
                            "status",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "RuleResource"
            },
            "RuleType": {
                "type": "string",
                "enum": [
                    "allow",
                    "deny"
                ],
                "title": "RuleType"
            },
            "RunRecipeRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "boolean",
                        "description": "Whether to send an email notification when the recipe has completed.",
                        "example": true
                    },
                    "servers": {
                        "type": "array",
                        "description": "The servers on which to run the recipe on.",
                        "example": [
                            1,
                            2,
                            3
                        ],
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "servers"
                ],
                "title": "RunRecipeRequest"
            },
            "RunSiteCommandRequest": {
                "type": "object",
                "properties": {
                    "command": {
                        "type": "string",
                        "description": "The command to run.",
                        "example": "nvm use 22"
                    }
                },
                "required": [
                    "command"
                ],
                "title": "RunSiteCommandRequest"
            },
            "SecurityRuleResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "securityRules"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The name of the security rule.",
                                "examples": [
                                    "Restricted Access"
                                ]
                            },
                            "path": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "description": "The path for the security rule.",
                                "examples": [
                                    "\/admin"
                                ]
                            },
                            "status": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "description": "The status of the security rule.",
                                "examples": [
                                    "installed"
                                ]
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the security rule was created.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the security rule was last updated.",
                                "examples": [
                                    "2025-07-30T09:00:00Z"
                                ]
                            }
                        },
                        "required": [
                            "name",
                            "path",
                            "status",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "SecurityRuleResource"
            },
            "ServerAction": {
                "type": "string",
                "description": "| |\n|---|\n| `reboot` <br\/> Reboot the server. |",
                "enum": [
                    "reboot"
                ],
                "title": "ServerAction"
            },
            "ServerActionRequest": {
                "type": "object",
                "properties": {
                    "action": {
                        "description": "The action to perform on the server.\n| |\n|---|\n| `reboot` <br\/> Reboot the server. |",
                        "example": "reboot",
                        "$ref": "#\/components\/schemas\/ServerAction"
                    }
                },
                "required": [
                    "action"
                ],
                "title": "ServerActionRequest"
            },
            "ServerCredentialResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "serverCredentials"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "provider": {
                                "type": "string"
                            },
                            "in_use": {
                                "type": "boolean"
                            },
                            "created_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "name",
                            "provider",
                            "in_use",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "ServerCredentialResource"
            },
            "ServerKeyResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "serverKeys"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "public_key": {
                                "type": "string"
                            },
                            "fingerprint": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "public_key",
                            "fingerprint"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "ServerKeyResource"
            },
            "ServerLogResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "serverLogs"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "content"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "ServerLogResource"
            },
            "ServerResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "servers"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "credential_id": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            },
                            "name": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "ubuntu_version": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "ssh_port": {
                                "type": "integer"
                            },
                            "provider": {
                                "type": "string"
                            },
                            "identifier": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "size": {
                                "type": "string"
                            },
                            "region": {
                                "type": "string"
                            },
                            "php_version": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "php_cli_version": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "opcache_status": {
                                "description": "The type of server.",
                                "examples": [
                                    "app"
                                ],
                                "$ref": "#\/components\/schemas\/ServerType"
                            },
                            "database_type": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "db_status": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "redis_status": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "ip_address": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "private_ip_address": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "revoked": {
                                "type": "boolean"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the server was created.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the server was last updated.",
                                "examples": [
                                    "2025-07-30T09:00:00Z"
                                ]
                            },
                            "connection_status": {
                                "type": "string"
                            },
                            "timezone": {
                                "type": "string"
                            },
                            "local_public_key": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "is_ready": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "id",
                            "credential_id",
                            "name",
                            "type",
                            "ubuntu_version",
                            "ssh_port",
                            "provider",
                            "identifier",
                            "size",
                            "region",
                            "php_version",
                            "php_cli_version",
                            "opcache_status",
                            "database_type",
                            "db_status",
                            "redis_status",
                            "ip_address",
                            "private_ip_address",
                            "revoked",
                            "created_at",
                            "updated_at",
                            "connection_status",
                            "timezone",
                            "local_public_key",
                            "is_ready"
                        ]
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "tags": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#\/components\/schemas\/TagResourceIdentifier"
                                        }
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "ServerResource"
            },
            "ServerType": {
                "type": "string",
                "enum": [
                    "app",
                    "web",
                    "loadbalancer",
                    "database",
                    "cache",
                    "worker",
                    "meilisearch"
                ],
                "title": "ServerType"
            },
            "ShareCredentialRequest": {
                "type": "object",
                "properties": {
                    "credential_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "credential_id"
                ],
                "title": "ShareCredentialRequest"
            },
            "ShareRecipeRequest": {
                "type": "object",
                "properties": {
                    "recipe_id": {
                        "type": "integer",
                        "description": "The ID of the recipe to share with the team.",
                        "example": 3
                    }
                },
                "required": [
                    "recipe_id"
                ],
                "title": "ShareRecipeRequest"
            },
            "ShareServerRequest": {
                "type": "object",
                "properties": {
                    "server_id": {
                        "type": "integer",
                        "description": "The server ID",
                        "example": 12345
                    }
                },
                "required": [
                    "server_id"
                ],
                "title": "ShareServerRequest"
            },
            "SiteProvisioningStep": {
                "type": "integer",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    99
                ],
                "title": "SiteProvisioningStep"
            },
            "SiteResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "sites"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "status": {
                                "$ref": "#\/components\/schemas\/SiteStatus"
                            },
                            "url": {
                                "type": "string"
                            },
                            "user": {
                                "type": "string"
                            },
                            "https": {
                                "type": "boolean"
                            },
                            "web_directory": {
                                "type": "string"
                            },
                            "root_directory": {
                                "type": "string"
                            },
                            "aliases": {
                                "type": "array",
                                "items": {}
                            },
                            "php_version": {
                                "type": "string"
                            },
                            "deployment_status": {
                                "type": "string"
                            },
                            "quick_deploy": {
                                "type": [
                                    "boolean",
                                    "null"
                                ]
                            },
                            "isolated": {
                                "type": "boolean"
                            },
                            "shared_paths": {
                                "type": "object",
                                "description": "* The linked directories for the site.",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            },
                            "repository": {
                                "type": "object",
                                "properties": {
                                    "provider": {
                                        "type": "string"
                                    },
                                    "url": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "branch": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "status": {
                                        "anyOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/RepositoryStatus"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "provider",
                                    "url",
                                    "branch",
                                    "status"
                                ]
                            },
                            "database": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "maintenance_mode": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "status": {
                                        "anyOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/MaintenanceModeStatus"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "enabled",
                                    "status"
                                ]
                            },
                            "zero_downtime_deployments": {
                                "type": "boolean"
                            },
                            "deployment_script": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "wildcards": {
                                "type": [
                                    "boolean",
                                    "null"
                                ]
                            },
                            "app_type": {
                                "type": "string"
                            },
                            "uses_envoyer": {
                                "type": "boolean"
                            },
                            "deployment_url": {
                                "type": "string"
                            },
                            "healthcheck_url": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "created_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "name",
                            "status",
                            "url",
                            "user",
                            "https",
                            "web_directory",
                            "root_directory",
                            "aliases",
                            "php_version",
                            "deployment_status",
                            "quick_deploy",
                            "isolated",
                            "shared_paths",
                            "repository",
                            "database",
                            "maintenance_mode",
                            "zero_downtime_deployments",
                            "deployment_script",
                            "wildcards",
                            "app_type",
                            "uses_envoyer",
                            "deployment_url",
                            "healthcheck_url",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "tags": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#\/components\/schemas\/TagResourceIdentifier"
                                        }
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            },
                            "latestDeployment": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "anyOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/DeploymentResourceIdentifier"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "SiteResource"
            },
            "SiteStatus": {
                "type": "string",
                "enum": [
                    "installed",
                    "creating",
                    "removing",
                    "installing",
                    "uninstalling",
                    "deployed",
                    "never-deployed",
                    "unhealthy",
                    "deploying",
                    "failed",
                    "maintenance"
                ],
                "title": "SiteStatus"
            },
            "SiteType": {
                "type": "string",
                "enum": [
                    "laravel",
                    "symfony",
                    "statamic",
                    "wordpress",
                    "phpmyadmin",
                    "php",
                    "next.js",
                    "nuxt.js",
                    "static-html",
                    "other",
                    "custom"
                ],
                "title": "SiteType"
            },
            "SourceControlProvider": {
                "type": "string",
                "description": "All supported source control providers.\n",
                "enum": [
                    "github",
                    "gitlab",
                    "bitbucket",
                    "gitlab-custom",
                    "custom"
                ],
                "title": "SourceControlProvider"
            },
            "SupervisorAction": {
                "type": "string",
                "description": "| |\n|---|\n| `reboot` <br\/> Reboot the Supervisor service |",
                "enum": [
                    "reboot"
                ],
                "title": "SupervisorAction"
            },
            "SupervisorServiceActionRequest": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#\/components\/schemas\/SupervisorAction"
                    }
                },
                "required": [
                    "action"
                ],
                "title": "SupervisorServiceActionRequest"
            },
            "TagResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "tags"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the tag was created.",
                                "examples": [
                                    "2025-07-29T09:00:00Z"
                                ]
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the tag was last updated.",
                                "examples": [
                                    "2025-07-30T09:00:00Z"
                                ]
                            }
                        },
                        "required": [
                            "name",
                            "created_at",
                            "updated_at"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type"
                ],
                "title": "TagResource"
            },
            "TagResourceIdentifier": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "tags"
                        ]
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "id"
                ],
                "title": "TagResourceIdentifier"
            },
            "TeamInvitationResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "teamInvitations"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "email": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "email",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "relationships": {
                        "type": "object",
                        "properties": {
                            "role": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "anyOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/RoleResourceIdentifier"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            },
                            "team": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "anyOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/TeamResourceIdentifier"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            },
                            "organization": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "anyOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/OrganizationResourceIdentifier"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "TeamInvitationResource"
            },
            "TeamResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "teams"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "name",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "TeamResource"
            },
            "TeamResourceIdentifier": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "teams"
                        ]
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "id"
                ],
                "title": "TeamResourceIdentifier"
            },
            "Template": {
                "type": "string",
                "enum": [
                    "laravel-queue-worker",
                    "horizon",
                    "octane",
                    "inertia",
                    "pulse",
                    "reverb",
                    "nightwatch",
                    "custom"
                ],
                "title": "Template"
            },
            "UpdateBackgroundProcessRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the background process."
                    },
                    "config": {
                        "type": "string",
                        "description": "The supervisor configuration of the background process."
                    }
                },
                "required": [
                    "name"
                ],
                "title": "UpdateBackgroundProcessRequest"
            },
            "UpdateComposerCredentialRequest": {
                "type": "object",
                "properties": {
                    "repository": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "repository",
                    "username",
                    "password"
                ],
                "title": "UpdateComposerCredentialRequest"
            },
            "UpdateDatabasePasswordRequest": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "password"
                ],
                "title": "UpdateDatabasePasswordRequest"
            },
            "UpdateDatabaseUserRequest": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The password for the database user.",
                        "example": "password",
                        "maxLength": 255
                    },
                    "database_ids": {
                        "type": "array",
                        "description": "The IDs of the databases to assign the user to.",
                        "example": [
                            1,
                            2,
                            3
                        ],
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "title": "UpdateDatabaseUserRequest"
            },
            "UpdateDeploymentScriptRequest": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string"
                    },
                    "auto_source": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    }
                },
                "required": [
                    "content"
                ],
                "title": "UpdateDeploymentScriptRequest"
            },
            "UpdateDomainRequest": {
                "type": "object",
                "properties": {
                    "www_redirect_type": {
                        "description": "The type of `www` redirection to apply to the domain.",
                        "$ref": "#\/components\/schemas\/WwwRedirectType"
                    },
                    "allow_wildcard_subdomains": {
                        "type": [
                            "boolean",
                            "null"
                        ],
                        "description": "Whether to allow wildcard subdomains for the domain."
                    }
                },
                "required": [
                    "www_redirect_type"
                ],
                "title": "UpdateDomainRequest"
            },
            "UpdateEnvironmentRequest": {
                "type": "object",
                "properties": {
                    "environment": {
                        "type": "string"
                    },
                    "cache": {
                        "type": "boolean"
                    },
                    "queues": {
                        "type": "boolean"
                    },
                    "encryption_key": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "environment"
                ],
                "title": "UpdateEnvironmentRequest"
            },
            "UpdateHealthcheckEndpointRequest": {
                "type": "object",
                "properties": {
                    "healthcheck_endpoint": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "The endpoint \/ URL that should be used to perform healthchecks.",
                        "example": "https:\/\/my-app.com\/up"
                    }
                },
                "title": "UpdateHealthcheckEndpointRequest"
            },
            "UpdateHeartbeatRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the heartbeat.",
                        "example": "My Heartbeat",
                        "maxLength": 255
                    },
                    "grace_period": {
                        "description": "The duration (in minutes) after which a heartbeat is considered missing.",
                        "example": 2,
                        "$ref": "#\/components\/schemas\/HeartbeatGracePeriod"
                    },
                    "frequency": {
                        "description": "The interval (in minutes) at which the client is expected to send a ping.",
                        "example": 1,
                        "$ref": "#\/components\/schemas\/HeartbeatFrequency"
                    },
                    "custom_frequency": {
                        "type": "string",
                        "description": "A cron expression representing the custom frequency at which the client is expected to send a ping, if the frequency is set to -1.",
                        "example": "* * * * *"
                    }
                },
                "required": [
                    "name",
                    "grace_period",
                    "frequency"
                ],
                "title": "UpdateHeartbeatRequest"
            },
            "UpdateLoadBalancerRequest": {
                "type": "object",
                "properties": {
                    "balancer_method": {
                        "$ref": "#\/components\/schemas\/NodeBalancerMethod"
                    },
                    "balancing": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "server_id": {
                                    "type": "integer"
                                },
                                "port": {
                                    "type": [
                                        "integer",
                                        "null"
                                    ],
                                    "minimum": 1,
                                    "maximum": 65535
                                },
                                "weight": {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "backup": {
                                    "type": "boolean"
                                },
                                "down": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "server_id",
                                "weight"
                            ]
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "balancer_method",
                    "balancing"
                ],
                "title": "UpdateLoadBalancerRequest"
            },
            "UpdateNginxConfigurationRequest": {
                "type": "object",
                "properties": {
                    "config": {
                        "type": "string"
                    }
                },
                "required": [
                    "config"
                ],
                "title": "UpdateNginxConfigurationRequest"
            },
            "UpdateNginxTemplateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the nginx template."
                    },
                    "content": {
                        "type": "string",
                        "description": "The content of the nginx template."
                    }
                },
                "required": [
                    "name",
                    "content"
                ],
                "title": "UpdateNginxTemplateRequest"
            },
            "UpdatePhpCliRequest": {
                "type": "object",
                "properties": {
                    "config": {
                        "type": "string"
                    }
                },
                "required": [
                    "config"
                ],
                "title": "UpdatePhpCliRequest"
            },
            "UpdatePhpCliVersionRequest": {
                "type": "object",
                "properties": {
                    "php_version": {
                        "type": "string",
                        "description": "The PHP version to update the CLI to.",
                        "enum": [
                            "5.6",
                            "7.0",
                            "7.1",
                            "7.2",
                            "7.3",
                            "7.4",
                            "8.0",
                            "8.1",
                            "8.2",
                            "8.3",
                            "8.4",
                            "8.5"
                        ],
                        "example": "7.4"
                    }
                },
                "required": [
                    "php_version"
                ],
                "title": "UpdatePhpCliVersionRequest"
            },
            "UpdatePhpFpmRequest": {
                "type": "object",
                "properties": {
                    "config": {
                        "type": "string"
                    }
                },
                "required": [
                    "config"
                ],
                "title": "UpdatePhpFpmRequest"
            },
            "UpdatePhpPoolRequest": {
                "type": "object",
                "properties": {
                    "config": {
                        "type": "string"
                    },
                    "user": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "config"
                ],
                "title": "UpdatePhpPoolRequest"
            },
            "UpdatePhpSettingsRequest": {
                "type": "object",
                "properties": {
                    "max_upload_size": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 0
                    },
                    "max_execution_time": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 0
                    },
                    "opcache": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    }
                },
                "title": "UpdatePhpSettingsRequest"
            },
            "UpdateRecipeRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "user": {
                        "type": "string",
                        "enum": [
                            "root",
                            "forge"
                        ]
                    },
                    "script": {
                        "type": "string"
                    }
                },
                "title": "UpdateRecipeRequest"
            },
            "UpdateRoleRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Permission"
                        }
                    }
                },
                "required": [
                    "name"
                ],
                "title": "UpdateRoleRequest"
            },
            "UpdateSecurityRuleRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the security rule.",
                        "example": "Restricted Access",
                        "maxLength": 255
                    },
                    "path": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The path for the security rule.",
                        "example": "\/admin",
                        "maxLength": 255
                    },
                    "credentials": {
                        "type": "array",
                        "description": "The credentials for the security rule.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "description": "The usernames for the credential.",
                                    "example": "admin",
                                    "maxLength": 50
                                },
                                "password": {
                                    "type": "string",
                                    "description": "The passwords for the credential.",
                                    "example": "secret123"
                                }
                            },
                            "required": [
                                "username"
                            ]
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "name",
                    "credentials"
                ],
                "title": "UpdateSecurityRuleRequest"
            },
            "UpdateSiteRequest": {
                "type": "object",
                "properties": {
                    "directory": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "type": {
                        "$ref": "#\/components\/schemas\/SiteType"
                    },
                    "php_version": {
                        "$ref": "#\/components\/schemas\/PhpVersion"
                    },
                    "push_to_deploy": {
                        "type": "boolean",
                        "description": "Automatically trigger a new deployment when changes are pushed to the environment's Git branch.",
                        "default": false
                    },
                    "repository_branch": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "title": "UpdateSiteRequest"
            },
            "UpdateTeamMemberRequest": {
                "type": "object",
                "properties": {
                    "role_id": {
                        "type": "integer",
                        "description": "The ID of the role to assign to the team member.",
                        "example": 3
                    }
                },
                "required": [
                    "role_id"
                ],
                "title": "UpdateTeamMemberRequest"
            },
            "UpdateTeamRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "role": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ]
                                }
                            },
                            "required": [
                                "id"
                            ]
                        }
                    }
                },
                "required": [
                    "name"
                ],
                "title": "UpdateTeamRequest"
            },
            "UserResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "users"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "name",
                            "email",
                            "created_at",
                            "updated_at"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "UserResource"
            },
            "UserResourceIdentifier": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "users"
                        ]
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "id"
                ],
                "title": "UserResourceIdentifier"
            },
            "VpcResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "vpcs"
                        ]
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The name of the vpc",
                                "examples": [
                                    "my-vpc"
                                ]
                            },
                            "cidrBlock": {
                                "type": "string"
                            },
                            "subnets": {
                                "type": "string"
                            },
                            "region": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "cidrBlock",
                            "subnets",
                            "region"
                        ]
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "self": {
                                "description": "A link to the resource itself",
                                "$ref": "#\/components\/schemas\/Link"
                            }
                        },
                        "required": [
                            "self"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "links"
                ],
                "title": "VpcResource"
            },
            "WwwRedirectType": {
                "type": "string",
                "enum": [
                    "from-www",
                    "to-www",
                    "none"
                ],
                "title": "WwwRedirectType"
            }
        },
        "responses": {
            "AuthorizationException": {
                "description": "Authorization error",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "ModelNotFoundException": {
                "description": "Not found",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            }
        }
    }
}